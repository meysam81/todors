(function() {
    var implementors = Object.fromEntries([["todors",[["impl&lt;S, B&gt; <a class=\"trait\" href=\"todors/http/middleware/trait.Transform.html\" title=\"trait todors::http::middleware::Transform\">Transform</a>&lt;S, <a class=\"struct\" href=\"todors/http/middleware/struct.ServiceRequest.html\" title=\"struct todors::http::middleware::ServiceRequest\">ServiceRequest</a>&gt; for <a class=\"struct\" href=\"todors/http/logging/struct.LogMiddleware.html\" title=\"struct todors::http::logging::LogMiddleware\">LogMiddleware</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"todors/http/middleware/trait.Service.html\" title=\"trait todors::http::middleware::Service\">Service</a>&lt;<a class=\"struct\" href=\"todors/http/middleware/struct.ServiceRequest.html\" title=\"struct todors::http::middleware::ServiceRequest\">ServiceRequest</a>, Response = <a class=\"struct\" href=\"todors/http/middleware/struct.ServiceResponse.html\" title=\"struct todors::http::middleware::ServiceResponse\">ServiceResponse</a>&lt;B&gt;, Error = <a class=\"struct\" href=\"todors/http/middleware/struct.ActixError.html\" title=\"struct todors::http::middleware::ActixError\">ActixError</a>&gt;,\n    S::<a class=\"associatedtype\" href=\"todors/http/middleware/trait.Service.html#associatedtype.Future\" title=\"type todors::http::middleware::Service::Future\">Future</a>: 'static,\n    B: 'static,</div>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[1361]}