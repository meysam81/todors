name: build-binary

concurrency:
  group: build-binary-${{ github.ref }}
  cancel-in-progress: true

on:
  release:
    types:
      - published
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        include:
          - image: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            mold: true
          - image: macos-latest
            target: x86_64-apple-darwin
          # TODO: windows target dir needs converting slashes to backslashes
          # - image: windows-latest
          #   target: x86_64-pc-windows-msvc
          - mold: true
            musl: true
            image: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - image: macos-latest
            target: aarch64-apple-darwin
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      # NOTE: this will save ~3GiB of space and takes time to download/upload
      # - if: runner.os == 'macOS'
      #   name: Cache Homebrew
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/Library/Caches/Homebrew/downloads/
      #     key: ${{ runner.os }}-homebrew
      - name: Install Rust stable
        run: |
          rustup toolchain install stable --target ${{ matrix.target }}
      - if: matrix.mold
        name: Install mold
        uses: rui314/setup-mold@v1
      - if: matrix.musl
        name: Install musl
        run: |
          sudo apt update
          sudo apt install -y musl-tools
      - if: runner.os == 'Linux'
        name: Install protoc
        uses: arduino/setup-protoc@v1
      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}
      - name: Rename binary
        run: |
          cp target/${{ matrix.target }}/release/todors target/${{ matrix.target }}/release/todors-${{ matrix.target }}
      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: |
          brew install coreutils protobuf
      - name: Checksum
        run: |
          cd target/${{ matrix.target }}/release
          sha256sum todors-${{ matrix.target }} > todors-${{ matrix.target }}.sha256
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: todors-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/todors-${{ matrix.target }}
            target/${{ matrix.target }}/release/todors-${{ matrix.target }}.sha256
          if-no-files-found: error
      - if: github.event_name == 'release' && github.event.action == 'published'
        name: Upload assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/todors-${{ matrix.target }}
            target/${{ matrix.target }}/release/todors-${{ matrix.target }}.sha256
