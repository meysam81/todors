var searchIndex = JSON.parse('{\
"todors":{"doc":"","t":"HHHHHHHHHHHHHHHHHHAAAAAAFAAAADDEDNDNHHHHDNDNNDNDHHHHHHHDNENHHHHHHHENDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLFLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMFMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNQNEIYNNGNNNDINNNNLLLLLMLKFLLLLLLLLLLKLLLLLLLLLMLFLAFOFOLLLLLLLKLLLLLLLMMMMMDDDDMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLMMLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLNNNENLLLLLLLLLLLLLLLLLDDLLLLFLLLLLLLLLLLLALLLLLLLLAADDRRFFLLLLLLLLLLLLLLLLLLLLLLAALLLLMMLLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLDIDDLMLLLLLLLLLKLLLLLLLLLLLLMLLLLLLLLMLMLLLLMLLLLLLLLLLLLLLLDDRRFFFDLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLMLLLAAMLLLLLLLLLLLLDLLLLLLLLLMLLLLLLLLLLLLLLDIDDLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLKLMLMLLLLMLLLLLLLLLLLLLLLDDDHHHHHHHHHHHHMLLLLMLLLLLLLLLLMLLMFLMFLMLMLFLMMMLMMLLLLFDFLLLLLLLLLLFLLMLLLLLLMLLLLLMLMLLLLLLLLLLLLLFLLLLLLLLDLLLLOMOLLLFOFLLLLLMLLLLLLLOLLLLODDDDLLLLLLLLLLLLMMMLLLLLLLLLMLLLLLLLLLLLLMMMLMMMLLLLLLLLLLLLLLLLLNNIYDENNNIYNLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLFLLLLLLLLLLLDLLMFFFFLLLLLMLMMMLLLLIQQDDQQXLLLLKMKLLLLLLKLLLLMMKMMLMLLLLLLKLL","n":["LOC","LOC","LOC","LOC","LOC","LOC","LOC","LOC","LOC","RS","RS","RS","RS","RS","RS","RS","RS","RS","cli","db","errors","grpc","http","logging","main","models","serializers","settings","traits","Cli","CliState","Commands","Completion","Completion","Create","Create","DEFAULT_VALUE","DEFAULT_VALUE","DEFAULT_VALUE","DEFAULT_VALUE","Delete","Delete","Get","Get","Grpc","GrpcServerAddr","Http","HttpServerAddr","LOC","LOC","LOC","LOC","LOC","LOC","LOC","List","List","Local","Local","RS","RS","RS","RS","RS","RS","RS","Serve","Serve","Update","Update","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","controller","done","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","generate_completions","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","handle_local","has_subcommand","has_subcommand","has_subcommand","host","host","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","limit","logger","new","offset","port","port","print_completions","shell","title","title","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","undone","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ColumnDecode","ColumnIndexOutOfBounds","ColumnNotFound","Configuration","Database","Database","Decode","Error","FromRow","FromRow","Io","Migrate","Pool","PoolClosed","PoolTimedOut","Protocol","QueryResult","Row","RowNotFound","Tls","TypeNotFound","WorkerCrashed","as_database_error","borrow","borrow","borrow_mut","borrow_mut","changes","column","columns","connect","default","extend","fmt","fmt","fmt","from","from","from","from","from","from_row","get","get_unchecked","into","into","into_database_error","into_request","into_request","is_empty","last_insert_rowid","last_insert_rowid","len","migrate","provide","query","query","query","query_as","query_as","rows_affected","source","to_string","try_column","try_from","try_from","try_get","try_get_raw","try_get_unchecked","try_into","try_into","type_id","type_id","vzip","vzip","index","index","len","source","type_name","Map","Query","QueryAs","QueryScalar","arguments","bind","bind","bind","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","database","execute","execute_many","fetch","fetch","fetch","fetch","fetch_all","fetch_all","fetch_all","fetch_all","fetch_many","fetch_many","fetch_many","fetch_many","fetch_one","fetch_one","fetch_one","fetch_one","fetch_optional","fetch_optional","fetch_optional","fetch_optional","from","from","from","from","inner","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","map","map","mapper","output","persistent","persistent","persistent","persistent","persistent","persistent","persistent","persistent","sql","sql","sql","sql","statement","statement","statement","statement","statement","take_arguments","take_arguments","take_arguments","take_arguments","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_map","try_map","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DatabaseError","IoError","SerializerError","TodoErrors","TodoNotFound","borrow","borrow_mut","fmt","fmt","from","from","from","from","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","TodoHealthCheck","TodoService","borrow","borrow","borrow_mut","borrow_mut","build_server","check","default","default","fmt","fmt","from","from","into","into","into_request","into_request","list_todos","proto","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","healthcheck","todo","Ping","Pong","STRUCT_NAME","STRUCT_NAME","ScalarWrapper","ScalarWrapper","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","health_check_client","health_check_server","into","into","into_request","into_request","message","message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","HealthCheckClient","accept_compressed","borrow","borrow_mut","check","clone","clone_into","connect","fmt","from","from_ref","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","CheckSvc","HealthCheck","HealthCheckServer","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call","call","check","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from","from_arc","from_ref","from_ref","inner","into","into","into","into_make_service","into_request","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_interceptor","ListTodosRequest","ListTodosResponse","STRUCT_NAME","STRUCT_NAME","ScalarWrapper","ScalarWrapper","ScalarWrapper","TodoRead","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","done","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","id","into","into","into","into_request","into_request","into_request","title","to_owned","to_owned","to_owned","todo_client","todo_server","todos","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","TodoClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","inner","into","into_request","list_todos","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","ListTodosSvc","Todo","TodoServer","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from","from_arc","from_ref","from_ref","inner","into","into","into","into_make_service","into_request","into_request","into_request","list_todos","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_interceptor","App","AppState","HttpServer","LOC","LOC","LOC","LOC","LOC","LOC","RS","RS","RS","RS","RS","RS","_phantom","addrs","addrs_with_scheme","app_data","backlog","backlog","bind","bind_uds","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","client_disconnect_timeout","client_request_timeout","config","configure","configure","controller","create_todo","data","data_factories","data_factory","default","default_service","delete_todo","disable_signals","endpoint","extensions","external","external_resource","factory","factory_ref","from","from","from","from","get_todo","index","index","into","into","into","into","into_factory","into_request","into_request","into_request","into_request","keep_alive","list_todos","listen","listen_uds","logger","max_connection_rate","max_connections","new","new","new","on_connect","on_connect_fn","register","route","run","server_hostname","service","services","shutdown_timeout","sockets","system_exit","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_todo","vzip","vzip","vzip","vzip","worker_max_blocking_threads","workers","wrap","wrap_fn","Logger","borrow","borrow_mut","clone","clone_into","debug","drain","error","fmt","from","from_ref","get_log_level","info","init","into","into_erased","into_request","is_enabled","list","list","log","log","new","root","root_typed","to_erased","to_owned","trace","try_from","try_into","type_id","vzip","warn","TodoController","TodoRead","TodoUpdate","TodoWrite","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create","delete","deserialize","deserialize","done","done","done","fmt","fmt","fmt","from","from","from","from","from_row","get","id","into","into","into","into","into_request","into_request","into_request","into_request","list","new","new","new","pagination_hard_limit","pagination_limit","pool","serialize","title","title","title","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","Array","Bool","Deserialize","Deserialize","Error","JsonValue","Null","Number","Object","Serialize","Serialize","String","as_array","as_array_mut","as_bool","as_f64","as_i64","as_null","as_object","as_object_mut","as_str","as_u64","borrow","borrow","borrow_mut","borrow_mut","classify","clone","clone_into","column","custom","custom","default","deserialize","deserialize","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","err","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_json","from_ref","from_str","get","get_mut","index","index_mut","into","into","into_deserializer","into_request","into_request","invalid_type","is_array","is_boolean","is_data","is_eof","is_f64","is_i64","is_io","is_null","is_number","is_object","is_string","is_syntax","is_u64","line","pointer","pointer_mut","provide","serialize","serialize","source","take","to_json","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Settings","borrow","borrow_mut","db_url","default_dburl","default_loglevel","default_pagination_hard_limit","default_pagination_limit","deserialize","fmt","from","into","into_request","log_level","new","num_workers","pagination_hard_limit","pagination_limit","try_from","try_into","type_id","vzip","Controller","Id","Input","ListRequest","ListResponse","OptionalInput","Output","async_trait","borrow","borrow","borrow_mut","borrow_mut","create","data","delete","deserialize","fmt","fmt","from","from","from","get","into","into","into_request","into_request","limit","limit","list","offset","offset","serialize","total","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip"],"q":["todors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::db::Error","","","","","todors::db::query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::errors","","","","","","","","","","","","","","","","","","","","","","todors::grpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::grpc::proto","","todors::grpc::proto::healthcheck","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::grpc::proto::healthcheck::health_check_client","","","","","","","","","","","","","","","","","","","","","","","","","todors::grpc::proto::healthcheck::health_check_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::grpc::proto::todo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::grpc::proto::todo::todo_client","","","","","","","","","","","","","","","","","","","","","","","","","todors::grpc::proto::todo::todo_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::http","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::logging","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::models","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::serializerstodors::settings","","","","","","","","","","","","","","","","","","","","","","todors::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate shell completion","","Create a new TODO with a title","","","","","","Delete a TODO by ID","","Get a TODO by ID","Serve gRPC over HTTP server","","Serve REST over HTTP server","","","","","","","","","","List all TODOs","","","","","","","","","","","Serve either the gRPC or REST over HTTP server","","Update a TODO by ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ID of the TODO to delete","The ID of the TODO to update","The ID of the TODO to get","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Number of results to return","","","Start of the query","","","","Generate completion scripts for your shell","The title of the TODO","The new title of the TODO","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error occurred while decoding a value from a specific …","Column index was out of bounds.","No column found for the given name.","Error occurred while parsing a connection string.","Error returned from the database.","","Error occurred while decoding a value.","Represents all the ways a method can fail within SQLx.","A record that can be built from a row returned by the …","","Error communicating with the database backend.","","An alias for <code>Pool</code>, specialized for SQLite.","<code>Pool::close</code> was called while we were waiting in …","A <code>Pool::acquire</code> timed out due to connections not becoming …","Unexpected or invalid data encountered while communicating …","","Represents a single row from the database.","No rows returned by a query that expected to return at …","Error occurred while attempting to establish a TLS …","Type in query doesn’t exist. Likely due to typo or …","A background worker has crashed.","","","","","","","Gets the column information at <code>index</code>.","Gets all columns in this statement.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Index into the database row and decode a single value.","Index into the database row and decode a single value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if this row has no columns.","","","Returns the number of columns in this row.","","","Types and traits for the <code>query</code> family of functions and …","Make a SQL query.","Statically checked SQL query with <code>println!()</code> style syntax.","Make a SQL query that is mapped to a concrete type using …","A variant of query! which takes a path to an explicitly …","","","","Gets the column information at <code>index</code> or <code>None</code> if out of …","","","Index into the database row and decode a single value.","Index into the database row and decode a single value.","Index into the database row and decode a single value.","","","","","","","","","","","","SQL query that will map its results to owned Rust types.","Raw SQL query with bind parameters. Returned by <code>query</code>.","Raw SQL query with bind parameters, mapped to a concrete …","Raw SQL query with bind parameters, mapped to a concrete …","","Bind a value for use with this SQL query.","Bind a value for use with this SQL query.","Bind a value for use with this SQL query.","","","","","","","","","","Execute the query and return the total number of rows …","Execute multiple queries and return the rows affected from …","Execute the query and return the generated results as a …","Execute the query and return the generated results as a …","Execute the query and return the generated results as a …","Execute the query and return the generated results as a …","Execute the query and return all the generated results, …","Execute the query and return all the generated results, …","Execute the query and return all the generated results, …","Execute the query and return all the generated results, …","Execute multiple queries and return the generated results …","Execute multiple queries and return the generated results …","Execute multiple queries and return the generated results …","Execute multiple queries and return the generated results …","Execute the query and returns exactly one row.","Execute the query and returns exactly one row.","Execute the query and returns exactly one row.","Execute the query and returns exactly one row.","Execute the query and returns at most one row.","Execute the query and returns at most one row.","Execute the query and returns at most one row.","Execute the query and returns at most one row.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Map each row in the result to another type.","Map each row in the result to another type.","","","","If <code>true</code>, the statement will get prepared once and cached …","","If <code>true</code>, the statement will get prepared once and cached …","","If <code>true</code>, the statement will get prepared once and cached …","","","","","","","","","","","","","","","","","","","","","","","","Map each row in the result to another type.","Map each row in the result to another type.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Generated client implementations.","Generated server implementations.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","","Generated trait containing gRPC methods that should be …","","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","","Generated trait containing gRPC methods that should be …","","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","The top-level builder for an Actix Web application.","","An HTTP Server.","","","","","","","","","","","","","","Returns addresses of bound sockets.","Returns addresses of bound sockets and the scheme for it.","Set application (root level) data.","Sets the maximum number of pending connections.","","Resolves socket address(es) and binds server to created …","Opens Unix Domain Socket (UDS) from <code>uds</code> path and binds …","","","","","","","","","","Sets server connection shutdown timeout.","Sets server client timeout for first request.","","","Run external configuration as part of the application …","","","Add application (root) data after wrapping in <code>Data&lt;T&gt;</code>.","","Add application data factory that resolves asynchronously.","","Default service that is invoked when no matching resource …","","Disables signal handling.","","","","Register an external resource.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Sets server keep-alive preference.","","Binds to existing listener for accepting incoming …","Binds to existing Unix Domain Socket (UDS) listener.","","Sets the per-worker maximum concurrent TLS connection …","Sets the per-worker maximum number of concurrent …","Create application builder. Application can be configured …","","Create new HTTP server with application factory","Sets function that will be called once before each …","","","Configure route for a specific path.","Start listening for incoming connections.","Sets server host name.","Register HTTP service.","","Sets timeout for graceful worker shutdown of workers.","","Flags the <code>System</code> to exit after server shutdown.","","","","","","","","","","","","","","","","","","Sets max number of threads for each worker’s blocking …","Sets number of workers to start (per bind address).","Registers an app-wide middleware.","Registers an app-wide function middleware.","Logging handle used to execute logging statements","","","","","Log debug level record","","Log error level record","","Returns the argument unchanged.","","","Log info level record","","Calls <code>U::from(self)</code>.","Convert to default, “erased” type: …","","","Get list of key-value pairs assigned to this <code>Logger</code>","","","Log one logging <code>Record</code>","Build a child logger","Build a root <code>Logger</code>","Build a root <code>Logger</code> that retains <code>drain</code> type","Create a copy with “erased” type","","Log trace level record","","","","","Log warning level record","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a JSON array.","Represents a JSON boolean.","A <strong>data structure</strong> that can be deserialized from any data …","","This type represents all possible errors that can occur …","Represents any valid JSON value.","Represents a JSON null value.","Represents a JSON number, whether integer or floating …","Represents a JSON object.","A <strong>data structure</strong> that can be serialized into any data …","","Represents a JSON string.","If the <code>Value</code> is an Array, returns the associated vector. …","If the <code>Value</code> is an Array, returns the associated mutable …","If the <code>Value</code> is a Boolean, returns the associated bool. …","If the <code>Value</code> is a number, represent it as f64 if possible. …","If the <code>Value</code> is an integer, represent it as i64 if …","If the <code>Value</code> is a Null, returns (). Returns None otherwise.","If the <code>Value</code> is an Object, returns the associated Map. …","If the <code>Value</code> is an Object, returns the associated mutable …","If the <code>Value</code> is a String, returns the associated str. …","If the <code>Value</code> is an integer, represent it as u64 if …","","","","","Categorizes the cause of this error.","","","One-based column number at which the error was detected.","","","","Deserialize this value from the given Serde deserializer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Display a JSON value as a string.","","Returns the argument unchanged.","","Convert a slice to <code>Value</code>","Returns the argument unchanged.","Convert 64-bit floating point number to <code>Value</code>","Convert copy-on-write string to <code>Value</code>","Convert string slice to <code>Value</code>","","Convert <code>()</code> to <code>Value</code>","Convert 32-bit floating point number to <code>Value</code>","","","Convert a <code>Vec</code> to <code>Value</code>","Convert <code>Number</code> to <code>Value</code>","","Convert boolean to <code>Value</code>","","","","Convert <code>String</code> to <code>Value</code>","","Convert map (with string keys) to <code>Value</code>","","","Convert an iteratable type to a <code>Value</code>","Convert an iteratable type to a <code>Value</code>","Deserialize an instance of type <code>T</code> from a string of JSON …","","","Index into a JSON array or map. A string index can be used …","Mutably index into a JSON array or map. A string index can …","Index into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> or","Write into a <code>serde_json::Value</code> using the syntax …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns true if the <code>Value</code> is an Array. Returns false …","Returns true if the <code>Value</code> is a Boolean. Returns false …","Returns true if this error was caused by input data that …","Returns true if this error was caused by prematurely …","Returns true if the <code>Value</code> is a number that can be …","Returns true if the <code>Value</code> is an integer between <code>i64::MIN</code> …","Returns true if this error was caused by a failure to read …","Returns true if the <code>Value</code> is a Null. Returns false …","Returns true if the <code>Value</code> is a Number. Returns false …","Returns true if the <code>Value</code> is an Object. Returns false …","Returns true if the <code>Value</code> is a String. Returns false …","Returns true if this error was caused by input that was not","Returns true if the <code>Value</code> is an integer between zero and …","One-based line number at which the error was detected.","Looks up a value by a JSON Pointer.","Looks up a value by a JSON Pointer and returns a mutable …","","Serialize this value into the given Serde serializer.","","","Takes the value out of the <code>Value</code>, leaving a <code>Null</code> in its …","Serialize the given data structure as a String of JSON.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,8,0,8,9,0,9,0,0,0,0,0,0,0,0,0,8,0,7,0,0,0,0,0,0,0,0,7,0,8,4,10,11,12,13,14,15,16,17,4,10,11,12,13,14,15,16,17,7,8,9,7,8,9,23,4,7,8,9,10,11,12,13,14,15,16,17,23,4,7,8,9,10,11,12,13,14,15,16,17,4,4,4,23,15,4,7,8,9,10,11,12,13,14,15,16,17,23,4,7,8,9,10,11,12,13,14,15,16,17,4,7,8,9,10,11,12,13,14,15,16,17,4,7,8,9,10,11,12,13,14,15,16,17,0,4,10,11,12,13,14,15,16,17,0,7,8,9,10,11,13,15,16,23,4,7,8,9,10,11,12,13,14,15,16,17,23,4,7,8,9,10,11,12,13,14,15,16,17,14,23,23,14,10,11,0,17,12,15,23,4,7,8,9,10,11,12,13,14,15,16,17,23,4,7,8,9,10,11,12,13,14,15,16,17,23,4,7,8,9,10,11,12,13,14,15,16,17,15,4,7,8,9,10,11,12,13,14,15,16,17,4,7,8,9,10,11,12,13,14,15,16,17,23,4,7,8,9,10,11,12,13,14,15,16,17,30,30,30,30,30,140,30,0,0,0,30,30,0,30,30,30,0,0,30,30,30,30,30,30,34,30,34,34,140,140,0,34,34,30,30,34,30,30,30,30,34,141,140,140,30,34,30,30,34,140,34,34,140,0,30,0,0,0,0,0,34,30,30,140,30,34,140,140,140,30,34,30,34,30,34,142,143,142,143,144,0,0,0,0,43,43,44,48,43,52,44,48,43,52,44,48,43,43,43,43,52,44,48,43,52,44,48,43,52,44,48,43,52,44,48,43,52,44,48,43,52,44,48,52,44,48,43,52,44,48,43,52,44,48,43,52,52,44,43,43,52,44,44,48,48,43,43,52,44,48,43,52,44,48,43,43,52,44,48,43,52,44,48,43,52,44,48,43,52,43,52,44,48,43,52,44,48,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,57,59,57,59,0,57,57,59,57,59,57,59,57,59,57,59,59,0,57,59,57,59,57,59,57,59,0,0,0,0,0,0,0,0,58,61,58,61,58,61,58,61,58,61,58,61,58,61,58,61,58,61,58,61,58,61,0,0,58,61,58,61,58,61,58,61,58,61,58,61,58,61,58,61,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,0,0,74,74,77,75,74,77,75,74,75,74,74,73,77,74,77,74,77,74,77,75,74,74,77,74,74,77,75,74,74,77,75,74,74,74,74,74,74,74,74,74,74,77,74,77,75,74,77,75,74,77,75,74,77,75,74,74,0,0,0,0,0,0,0,0,60,82,83,60,82,83,60,82,83,60,82,83,60,82,83,60,82,83,83,60,82,83,60,82,83,60,82,83,60,82,83,60,82,83,83,60,82,83,60,82,83,83,60,82,83,0,0,82,60,82,83,60,82,83,60,82,83,60,82,83,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,0,0,0,86,86,88,87,86,88,87,86,87,86,86,88,86,88,86,88,86,88,87,86,86,88,86,86,88,87,86,86,88,87,86,85,86,86,86,86,86,86,86,86,86,88,86,88,87,86,88,87,86,88,87,86,88,87,86,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,89,89,92,89,89,89,89,92,95,106,89,92,95,106,89,89,89,89,89,0,92,95,0,92,92,92,92,92,0,89,92,92,92,92,89,92,92,95,106,89,0,0,0,92,95,106,89,92,92,95,106,89,89,0,89,89,95,89,89,92,95,89,89,89,106,92,89,89,92,92,89,89,89,92,95,106,89,92,95,106,89,92,95,106,89,0,92,95,106,89,89,89,92,92,0,27,27,27,27,0,27,0,27,27,27,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,0,0,0,0,0,117,120,118,119,117,120,118,119,117,117,118,119,120,118,119,120,118,119,117,120,118,119,120,117,120,117,120,118,119,117,120,118,119,117,117,118,119,117,117,117,120,120,118,119,117,120,118,119,117,120,118,119,117,120,118,119,117,117,120,118,119,122,122,0,0,0,0,122,122,122,0,0,122,122,122,122,122,122,122,122,122,122,122,55,122,55,122,55,122,122,55,55,55,122,145,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,55,55,55,122,122,55,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,122,122,122,122,122,122,55,122,122,55,122,55,122,122,55,55,122,122,55,122,122,122,122,55,122,55,122,122,55,146,122,55,122,0,122,55,122,55,122,55,122,55,122,55,122,0,137,137,137,0,0,0,0,137,137,137,137,137,137,137,137,137,137,137,137,137,137,0,147,147,0,0,147,147,0,101,139,101,139,147,139,147,101,101,139,101,101,139,147,101,139,101,139,101,139,147,101,139,139,139,101,139,101,139,101,139,147,101,139],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],0,[[],3],0,0,[[4,5],6],[[7,5],6],[[8,5],6],[[9,5],6],[[10,5],6],[[11,5],6],[[12,5],6],[[13,5],6],[[14,5],6],[[15,5],6],[[16,5],6],[[17,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,[[2,[4,19]]]],[18,[[2,[7,19]]]],[18,[[2,[8,19]]]],[18,[[2,[9,19]]]],[18,[[2,[10,19]]]],[18,[[2,[11,19]]]],[18,[[2,[12,19]]]],[18,[[2,[13,19]]]],[18,[[2,[14,19]]]],[18,[[2,[15,19]]]],[18,[[2,[16,19]]]],[18,[[2,[17,19]]]],[18,[[2,[4,19]]]],[18,[[2,[7,19]]]],[18,[[2,[8,19]]]],[18,[[2,[9,19]]]],[18,[[2,[10,19]]]],[18,[[2,[11,19]]]],[18,[[2,[12,19]]]],[18,[[2,[13,19]]]],[18,[[2,[14,19]]]],[18,[[2,[15,19]]]],[18,[[2,[16,19]]]],[18,[[2,[17,19]]]],[[20,3]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[8,23]],[24,25],[24,25],[24,25],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,[27,23],0,0,0,[28],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,[[4,18],[[2,[19]]]],[[7,18],[[2,[19]]]],[[8,18],[[2,[19]]]],[[9,18],[[2,[19]]]],[[10,18],[[2,[19]]]],[[11,18],[[2,[19]]]],[[12,18],[[2,[19]]]],[[13,18],[[2,[19]]]],[[14,18],[[2,[19]]]],[[15,18],[[2,[19]]]],[[16,18],[[2,[19]]]],[[17,18],[[2,[19]]]],[[4,18],[[2,[19]]]],[[7,18],[[2,[19]]]],[[8,18],[[2,[19]]]],[[9,18],[[2,[19]]]],[[10,18],[[2,[19]]]],[[11,18],[[2,[19]]]],[[12,18],[[2,[19]]]],[[13,18],[[2,[19]]]],[[14,18],[[2,[19]]]],[[15,18],[[2,[19]]]],[[16,18],[[2,[19]]]],[[17,18],[[2,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[30,[[22,[31]]]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[24,[22,[32]]],[[2,[33,30]]]],[[],34],[34],[[30,5],[[2,[35]]]],[[30,5],[[2,[35]]]],[[34,5],[[2,[35]]]],[36,30],[[]],[37,30],[[],30],[[]],[[],[[2,[30]]]],[[]],[[]],[[]],[[]],[30,[[22,[[39,[31,38]]]]]],[[],26],[[],26],[[],25],[34,40],0,[[],41],[33,[[2,[30]]]],[42],0,[24,43],0,[24,44],0,[34,45],[30,[[22,[46]]]],[[],47],[[],[[2,[30]]]],[[],2],[[],2],[[],[[2,[30]]]],[[],[[2,[30]]]],[[],[[2,[30]]]],[[],2],[[],2],[[],29],[[],29],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[43,43],[44,44],[48,48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[43,49],[43,49],[43,[[51,[[39,[50,38]]]]]],[52,[[51,[[39,[50,38]]]]]],[44,[[51,[[39,[50,38]]]]]],[48,[[51,[[39,[50,38]]]]]],[43,49],[52,49],[44,49],[48,49],[43,[[51,[[39,[50,38]]]]]],[52,[[51,[[39,[50,38]]]]]],[44,[[51,[[39,[50,38]]]]]],[48,[[51,[[39,[50,38]]]]]],[43,49],[52,49],[44,49],[48,49],[43,49],[52,49],[44,49],[48,49],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[43,[[52,[[0,[53,54]]]]]],[52,[[52,[[0,[53,54]]]]]],0,0,[43,25],[[43,25],43],[52,25],[[44,25],44],[44,25],[[48,25],48],[48,25],0,[43,24],[52,24],[44,24],[48,24],[43,22],[52,22],[44,22],[48,22],0,[43,22],[52,22],[44,22],[48,22],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[43,52],[52,[[52,[[0,[53,54]]]]]],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[1,5],6],[[1,5],6],[[]],[37,1],[30,1],[55,1],[[]],[[],26],[42],[1,[[22,[46]]]],[[],47],[[],2],[[],2],[[],29],[[]],0,0,[[]],[[]],[[]],[[]],[41,56],[[57,[26,[58]]],[[51,[[39,[49]]]]]],[[],57],[[],59],[[57,5],6],[[59,5],6],[[]],[[]],[[]],[[]],[[],26],[[],26],[[59,[26,[60]]],[[51,[[39,[49]]]]]],0,[[],2],[[],2],[[],2],[[],2],[[],29],[[],29],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[58],[61],[58,58],[61,61],[[]],[[]],[[],58],[[],61],[58,41],[61,41],[[58,58],25],[[61,61],25],[[58,5],6],[[61,5],6],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[],26],[[],26],0,0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],29],[[],29],[[]],[[]],0,[[62,63],62],[[]],[[]],[[62,[64,[58]]],[[2,[[65,[61]],66]]]],[[[62,[67]]],[[62,[67]]]],[[]],[[],[[2,[[62,[68]],69]]]],[[[62,[70]],5],6],[[]],[[]],0,[[]],[[],26],[[62,41],62],[[62,41],62],[[],62],[[62,63],62],[[]],[[],2],[[],2],[[],29],[[]],[[],[[62,[71]]]],[72,62],0,0,0,0,[[[74,[73]],63],[[74,[73]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[75,[73]],[26,[58]]]],[[74,76]],[76],[[[26,[58]]],[[51,[[39,[49]]]]]],[[[77,[73]]],[[77,[73]]]],[[[74,[73]]],[[74,[73]]]],[[]],[[]],[[[77,[70]],5],6],[[[74,[[0,[70,73]]]],5],6],[[]],[[]],[[]],[[[78,[73]]],[[74,[73]]]],[[]],[[]],0,[[]],[[]],[[]],[[],79],[[],26],[[],26],[[],26],[[[74,[73]],41],[[74,[73]]]],0,[[[74,[73]],41],[[74,[73]]]],0,[73,[[74,[73]]]],[[74,80],[[81,[2]]]],[80,[[81,[2]]]],[[[74,[73]],63],[[74,[73]]]],0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],29],[[],29],[[],29],[[]],[[]],[[]],[73,[[71,[[74,[73]]]]]],0,0,0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[60],[82],[83],[60,60],[82,82],[83,83],[[]],[[]],[[]],[[],60],[[],82],[[],83],0,[60,41],[82,41],[83,41],[[60,60],25],[[82,82],25],[[83,83],25],[[60,5],6],[[82,5],6],[[83,5],6],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],26],[[],26],[[],26],0,[[]],[[]],[[]],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],29],[[],29],[[],29],[[]],[[]],[[]],0,[[84,63],84],[[]],[[]],[[[84,[67]]],[[84,[67]]]],[[]],[[],[[2,[[84,[68]],69]]]],[[[84,[70]],5],6],[[]],[[]],0,[[]],[[],26],[[84,[64,[60]]],[[2,[[65,[82]],66]]]],[[84,41],84],[[84,41],84],[[],84],[[84,63],84],[[]],[[],2],[[],2],[[],29],[[]],[[],[[84,[71]]]],[72,84],0,0,0,0,[[[86,[85]],63],[[86,[85]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[87,[85]],[26,[60]]]],[[86,76]],[76],[[[88,[85]]],[[88,[85]]]],[[[86,[85]]],[[86,[85]]]],[[]],[[]],[[[88,[70]],5],6],[[[86,[[0,[70,85]]]],5],6],[[]],[[]],[[]],[[[78,[85]]],[[86,[85]]]],[[]],[[]],0,[[]],[[]],[[]],[[],79],[[],26],[[],26],[[],26],[[[26,[60]]],[[51,[[39,[49]]]]]],[[[86,[85]],41],[[86,[85]]]],0,[[[86,[85]],41],[[86,[85]]]],0,[85,[[86,[85]]]],[[86,80],[[81,[2]]]],[80,[[81,[2]]]],[[[86,[85]],63],[[86,[85]]]],0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],29],[[],29],[[],29],[[]],[[]],[[]],[85,[[71,[[86,[85]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[89,[[91,[90,38]]]],[89,[[91,[38]]]],[92,92],[[89,32],89],0,[89,[[2,[89,37]]]],[89,[[2,[89,37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[89,93],89],[[89,93],89],0,[94],[92,92],0,[[[96,[95]],97],98],[92,92],0,[92,92],0,[92,92],[[[96,[95]],99],98],[89,89],0,0,0,[92,92],0,0,[[]],[[]],[[]],[[]],[[[96,[95]],99],98],0,[[],98],[[]],[[]],[[]],[[]],[92,100],[[],26],[[],26],[[],26],[[],26],[89,89],[[[96,[95]],[102,[101]]],98],[[89,103],[[2,[89,37]]]],[[89,104],[[2,[89,37]]]],0,[[89,41],89],[[89,41],89],[[],[[92,[105]]]],[27,[[96,[95]]]],[[],89],[89,89],0,[[106,107]],[[92,24,108],92],[89,109],[89,89],[92,92],0,[[89,45],89],0,[89,89],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],29],[[],29],[[],29],[[],29],[[[96,[95]],99,97],98],[[]],[[]],[[]],[[]],[[89,41],89],[[89,41],89],[92,[[92,[[111,[110]]]]]],[92,[[92,[[111,[110]]]]]],0,[[]],[[]],[27,27],[[]],0,0,0,[[27,5],[[2,[35]]]],[[]],[[]],[24,112],0,[24,27],[[]],[27,[[27,[[78,[113]]]]]],[[],26],[[27,112],25],[27,114],0,[[27,115,114],2],[[27,115]],[[27,116],27],[116,[[27,[[78,[113]]]]]],[116,27],[27,[[27,[[78,[113]]]]]],[[]],0,[[],2],[[],2],[[],29],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[117,[[51,[[39,[49]]]]]],[117,[[51,[[39,[49]]]]]],[[],[[2,[118]]]],[[],[[2,[119]]]],0,0,0,[[120,5],6],[[118,5],6],[[119,5],6],[[]],[[]],[[]],[[]],[[],[[121,[120]]]],[117,[[51,[[39,[49]]]]]],0,[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[117,101],[[51,[[39,[49]]]]]],[[33,[22,[32]],[22,[32]]],117],[[47,[22,[25]]],118],[[[22,[47]],[22,[25]]],119],0,0,0,[120,2],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],29],[[],29],[[],29],[[],29],[117,[[51,[[39,[49]]]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[122,[[22,[91]]]],[122,[[22,[91]]]],[122,[[22,[25]]]],[122,[[22,[123]]]],[122,[[22,[40]]]],[122,22],[122,[[22,[124]]]],[122,[[22,[124]]]],[122,[[22,[24]]]],[122,[[22,[45]]]],[[]],[[]],[[]],[[]],[55,125],[122,122],[[]],[55,41],[[],55],[[],55],[[],122],[[],2],[[],[[2,[122]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[[122,24],[[2,[55]]]],[[122,24],[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[[122,24],[[2,[55]]]],[[122,24],[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[[122,24],[[2,[55]]]],[[122,24],[[2,[55]]]],[[122,41],[[2,[55]]]],[[122,41],[[2,[55]]]],[[122,24,41],[[2,[55]]]],[[122,24,41],[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[122,[[2,[55]]]],[[122,24],[[2,[55]]]],[[122,24],[[2,[55]]]],[[122,126],25],[[122,25],25],[[122,127],25],[[122,47],25],[[122,127],25],[[122,128],25],[[122,126],25],[[122,129],25],[[122,130],25],[[122,45],25],[[122,130],25],[[122,41],25],[[122,25],25],[[122,41],25],[[122,40],25],[[122,45],25],[[122,45],25],[[122,40],25],[[122,123],25],[[122,122],25],[[122,129],25],[[122,131],25],[[122,32],25],[[122,123],25],[[122,126],25],[[122,32],25],[[122,131],25],[[122,127],25],[[122,40],25],[[122,123],25],[[122,32],25],[[122,129],25],[[122,132],25],[[122,24],25],[[122,131],25],[[122,24],25],[[122,130],25],[[122,25],25],[[122,128],25],[[122,128],25],[[122,41],25],[[122,132],25],[[122,132],25],[[],25],0,[[55,5],[[2,[35]]]],[[55,5],[[2,[35]]]],[[122,5],[[2,[35]]]],[[122,5],[[2,[35]]]],[[]],[127,122],[[],122],[[]],[123,122],[[[133,[24]]],122],[24,122],[126,122],[[],122],[131,122],[41,122],[22,122],[[[91,[38]]],122],[134,122],[129,122],[25,122],[132,122],[128,122],[32,122],[47,122],[130,122],[[[124,[47,122]]],122],[40,122],[45,122],[[],122],[[],122],[24,[[2,[55]]]],[[]],[24,[[2,[122,55]]]],[122,[[22,[122]]]],[122,[[22,[122]]]],[122,122],[122,122],[[]],[[]],[122],[[],26],[[],26],[[135,136],55],[122,25],[122,25],[55,25],[55,25],[122,25],[122,25],[55,25],[122,25],[122,25],[122,25],[122,25],[55,25],[122,25],[55,41],[[122,24],[[22,[122]]]],[[122,24],[[22,[122]]]],[42],[[],2],[122,2],[55,[[22,[46]]]],[122,122],[[],[[2,[47,55]]]],[[]],[[],47],[[],47],[[],2],[[],2],[[],2],[[],2],[[],29],[[],29],[[]],[[]],0,[[]],[[]],0,[[],47],[[],47],[[],32],[[],32],[[],[[2,[137]]]],[[137,5],6],[[]],[[]],[[],26],0,[[],[[2,[137,138]]]],0,0,0,[[],2],[[],2],[[],29],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[51,[[39,[49]]]]]],0,[[],[[51,[[39,[49]]]]]],[[],[[2,[101]]]],[[101,5],6],[[139,5],6],[[]],[[[102,[101]]],101],[[]],[[],[[51,[[39,[49]]]]]],[[]],[[]],[[],26],[[],26],0,0,[101,[[51,[[39,[49]]]]]],0,0,[139,2],0,[[],2],[[],2],[[],2],[[],2],[[],29],[[],29],[[],[[51,[[39,[49]]]]]],[[]],[[]]],"p":[[4,"TodoErrors"],[4,"Result"],[3,"Command"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[4,"Commands"],[4,"Local"],[4,"Serve"],[3,"HttpServerAddr"],[3,"GrpcServerAddr"],[3,"Create"],[3,"Delete"],[3,"List"],[3,"Update"],[3,"Get"],[3,"Completion"],[3,"ArgMatches"],[6,"Error"],[8,"Generator"],[3,"Id"],[4,"Option"],[3,"CliState"],[15,"str"],[15,"bool"],[3,"Request"],[3,"Logger"],[4,"Shell"],[3,"TypeId"],[4,"Error"],[8,"DatabaseError"],[15,"u32"],[6,"Pool"],[3,"QueryResult"],[3,"Error"],[4,"MigrateError"],[3,"Error"],[3,"Global"],[3,"Box"],[15,"i64"],[15,"usize"],[3,"Demand"],[3,"Query"],[3,"QueryAs"],[15,"u64"],[8,"Error"],[3,"String"],[3,"QueryScalar"],[8,"Future"],[8,"Stream"],[3,"Pin"],[3,"Map"],[8,"FnMut"],[8,"Send"],[3,"Error"],[3,"Router"],[3,"TodoHealthCheck"],[3,"Ping"],[3,"TodoService"],[3,"ListTodosRequest"],[3,"Pong"],[3,"HealthCheckClient"],[4,"CompressionEncoding"],[8,"IntoRequest"],[3,"Response"],[3,"Status"],[8,"Clone"],[3,"Channel"],[3,"Error"],[8,"Debug"],[3,"InterceptedService"],[3,"Uri"],[8,"HealthCheck"],[3,"HealthCheckServer"],[3,"CheckSvc"],[3,"Request"],[3,"_Inner"],[3,"Arc"],[3,"IntoMakeService"],[3,"Context"],[4,"Poll"],[3,"ListTodosResponse"],[3,"TodoRead"],[3,"TodoClient"],[8,"Todo"],[3,"TodoServer"],[3,"ListTodosSvc"],[3,"_Inner"],[3,"HttpServer"],[4,"SocketAddr"],[3,"Vec"],[3,"App"],[3,"Duration"],[3,"ServiceConfig"],[3,"AppState"],[3,"Data"],[3,"Json"],[3,"HttpResponse"],[3,"Path"],[3,"AppInit"],[3,"ListRequest"],[3,"Query"],[3,"TcpListener"],[3,"UnixListener"],[3,"AppEntry"],[3,"index"],[3,"AppService"],[3,"Route"],[3,"Server"],[3,"ServiceRequest"],[8,"ServiceFactory"],[4,"Level"],[8,"SendSyncRefUnwindSafeDrain"],[3,"OwnedKVList"],[3,"Record"],[3,"OwnedKV"],[3,"TodoController"],[3,"TodoWrite"],[3,"TodoUpdate"],[3,"TodoRead"],[6,"Result"],[4,"JsonValue"],[15,"f64"],[3,"Map"],[4,"Category"],[15,"u8"],[15,"i8"],[15,"i32"],[15,"isize"],[15,"u16"],[15,"f32"],[15,"i16"],[4,"Cow"],[3,"Number"],[4,"Unexpected"],[8,"Expected"],[3,"Settings"],[4,"ConfigError"],[3,"ListResponse"],[8,"Row"],[8,"FromRow"],[13,"ColumnIndexOutOfBounds"],[13,"ColumnDecode"],[13,"TypeNotFound"],[8,"Deserialize"],[8,"Serialize"],[8,"Controller"]],"a":{"manage":[837],"middleware":[927,928],"use":[927,928]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
