var searchIndex = JSON.parse('{\
"todors":{"doc":"","t":"HHHHHHHHHHHHHHHHHHAAAAAAFAAAADDEDNDNHHHHDNDNNDNDHHHHHHHNENHHHHHHHENDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLFLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMLMMFMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNEIYNNGNNNDNNNNLLLLLMFLLLLLLLLLLKLLLLLLMFLAFOFOLLLLLLLLLLLMMMMMDDDDMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLMMLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLNNNENLLLLLLLLLLLLLLLLLDCCDDLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLMLMMMLLLLLLLLLLLMLMLLAMMLMLMLMLLLMLLLLLLLLLLLLADDRRFFLLLLLLLLLLLLLLLLLLLLLLAALLLLMMLLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLDIDDLMLLLLLLLLLKLLLLLLLLLLLLMLLLLLLLLMLMLLLLMLLLLLLLLLLLLLLLLLDDLLQLLLLLLLLDDLLHHHHHLLLLLLLLLLLLLLLLLLLLLHHHHHLLLLILLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLMLLMFLMLFLLMLMLLFLLMLMLMLMLMMLLLLLLLLLLLXFLLLLDFLLLLLLLLLLLLLLLFLLMLLLLLLLLLLLMLMKLLLLLMLLMLLLLLLLLLLLLLLLLLLFLLLLLLALLLLLNIIDDDENDDDDEDNDDDDDDDDDNDDKLLKLLMLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLMMLLLLLLLMLFLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLMMMMMFLMLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLFMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLKLLKLLLFLLLLLLLLLLLFLFLLLLFLMLLLLLLLLLLLMMMLLFLMLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDLLLLOMOLLLFOFLLLLLMLLLLLLLOLLLLODDDDLLLLLLLLLLLLMMMLLLLLLLLLMLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLLLIYDIYLLLLLLKMLLLFLLLLLLLLLKLFLLLLLDLLMFFLLLLLMLMLLLLIQQQQXKKKKK","n":["LOC","LOC","LOC","LOC","LOC","LOC","LOC","LOC","LOC","RS","RS","RS","RS","RS","RS","RS","RS","RS","cli","db","errors","grpc","http","logging","main","models","serializers","settings","traits","Cli","CliState","Commands","Completion","Completion","Create","Create","DEFAULT_VALUE","DEFAULT_VALUE","DEFAULT_VALUE","DEFAULT_VALUE","Delete","Delete","Get","Get","Grpc","GrpcServerAddr","Http","HttpServerAddr","LOC","LOC","LOC","LOC","LOC","LOC","LOC","List","Local","Local","RS","RS","RS","RS","RS","RS","RS","Serve","Serve","Update","Update","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","controller","done","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","generate_completions","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","handle_local","has_subcommand","has_subcommand","has_subcommand","host","host","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","logger","new","port","port","print_completions","shell","title","title","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","undone","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ColumnDecode","ColumnIndexOutOfBounds","ColumnNotFound","Configuration","Database","Decode","Error","FromRow","FromRow","Io","Migrate","Pool","PoolClosed","PoolTimedOut","Protocol","QueryResult","RowNotFound","Tls","TypeNotFound","WorkerCrashed","as_database_error","borrow","borrow","borrow_mut","borrow_mut","changes","connect","default","extend","fmt","fmt","fmt","from","from","from","from","from","from_row","into","into","into_database_error","into_request","into_request","last_insert_rowid","last_insert_rowid","migrate","provide","query","query","query","query_as","query_as","rows_affected","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","index","index","len","source","type_name","Map","Query","QueryAs","QueryScalar","arguments","bind","bind","bind","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","database","execute","execute_many","fetch","fetch","fetch","fetch","fetch_all","fetch_all","fetch_all","fetch_all","fetch_many","fetch_many","fetch_many","fetch_many","fetch_one","fetch_one","fetch_one","fetch_one","fetch_optional","fetch_optional","fetch_optional","fetch_optional","from","from","from","from","inner","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","map","map","mapper","output","persistent","persistent","persistent","persistent","persistent","persistent","persistent","persistent","sql","sql","sql","sql","statement","statement","statement","statement","statement","take_arguments","take_arguments","take_arguments","take_arguments","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_map","try_map","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DatabaseError","IoError","SerializerError","TodoErrors","TodoNotFound","borrow","borrow_mut","fmt","fmt","from","from","from","from","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","Channel","HealthCheck","HealthCheckServer","Server","TodoHealthCheck","accept_http1","accept_http1","add_optional_service","add_service","balance_channel","balance_channel_with_executor","balance_list","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","builder","call","call","check","clone","clone","clone_into","clone_into","concurrency_limit","concurrency_limit_per_connection","default","default","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_shared","from_static","http2_adaptive_window","http2_adaptive_window","http2_keepalive_interval","http2_keepalive_interval","http2_keepalive_timeout","http2_keepalive_timeout","init_connection_window_size","init_stream_window_size","initial_connection_window_size","initial_stream_window_size","into","into","into","into_make_service","into_request","into_request","into_request","layer","max_concurrent_streams","max_concurrent_streams","max_frame_size","max_frame_size","poll_ready","poll_ready","proto","service_builder","svc","tcp_keepalive","tcp_keepalive","tcp_nodelay","tcp_nodelay","timeout","timeout","to_owned","to_owned","trace_fn","trace_interceptor","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","healthcheck","Ping","Pong","STRUCT_NAME","STRUCT_NAME","ScalarWrapper","ScalarWrapper","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","health_check_client","health_check_server","into","into","into_request","into_request","message","message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","HealthCheckClient","accept_compressed","borrow","borrow_mut","check","clone","clone_into","connect","fmt","from","from_ref","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","CheckSvc","HealthCheck","HealthCheckServer","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call","call","check","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from","from_arc","from_ref","from_ref","inner","into","into","into","into_make_service","into_request","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_interceptor","Accepted","AlreadyReported","App","AppState","BadGateway","BadRequest","Body","Conflict","Continue","Created","ExpectationFailed","Forbidden","Found","GatewayTimeout","Gone","HttpResponse","HttpServer","InsufficientStorage","InternalServerError","LOC","LOC","LOC","LOC","LOC","LengthRequired","LoopDetected","MethodNotAllowed","MovedPermanently","MultiStatus","MultipleChoices","NoContent","NonAuthoritativeInformation","NotAcceptable","NotFound","NotImplemented","NotModified","Ok","PartialContent","PayloadTooLarge","PaymentRequired","PermanentRedirect","PreconditionFailed","PreconditionRequired","Processing","ProxyAuthenticationRequired","RS","RS","RS","RS","RS","RangeNotSatisfiable","RequestHeaderFieldsTooLarge","RequestTimeout","ResetContent","Responder","SeeOther","ServiceUnavailable","SwitchingProtocols","TemporaryRedirect","TooManyRequests","Unauthorized","UnavailableForLegalReasons","UnprocessableEntity","UnsupportedMediaType","UriTooLong","UseProxy","VariantAlsoNegotiates","VersionNotSupported","_phantom","add_cookie","add_removal_cookie","addrs","addrs_with_scheme","app_data","backlog","backlog","bind","bind_uds","body","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","client_disconnect_timeout","client_request_timeout","config","configure","configure","controller","cookies","create_todo","customize","data","data_factories","data_factory","default","default_service","del_cookie","delete_todo","disable_signals","drop_body","endpoint","error","error","extensions","extensions","extensions_mut","external","external_resource","factory","factory_ref","fmt","from","from","from","from","from","from","from","from","from","from_error","get","get_todo","head","head_mut","headers","headers_mut","index","index","into","into","into","into","into","into_body","into_factory","into_parts","into_request","into_request","into_request","into_request","into_request","keep_alive","keep_alive","list_todos","listen","listen_uds","logger","map_body","map_into_boxed_body","map_into_left_body","map_into_right_body","max_connection_rate","max_connections","new","new","new","new","on_connect","on_connect_fn","register","res","respond_to","respond_to","route","run","server_hostname","service","services","set_body","shutdown_timeout","sockets","status","status_mut","system_exit","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_todo","upgrade","vzip","vzip","vzip","vzip","vzip","web","with_body","worker_max_blocking_threads","workers","wrap","wrap_fn","Body","Buf","BufMut","Bytes","BytesMut","Data","Either","Error","Form","FormConfig","Header","Json","JsonBody","JsonConfig","Left","Path","PathConfig","Payload","PayloadConfig","Query","QueryConfig","Readlines","Redirect","ReqData","Right","ServiceConfig","UrlEncoded","advance","advance","advance","advance_mut","advance_mut","app_data","app_data","as_mut","as_ref","as_ref","as_ref","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","cap","capacity","chain","chain_mut","checked_buff","chunk","chunk","chunk","chunk_mut","chunk_mut","chunks_vectored","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","configure","content_type","content_type","content_type_required","content_type_required","copy_from_slice","copy_to_bytes","copy_to_bytes","copy_to_bytes","copy_to_slice","data","data","data","default","default","default","default","default","default","default","default","default_service","delete","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","encoded_len","encoding","encoding","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","err","err_handler","err_handler","err_handler","err_handler","error_handler","error_handler","error_handler","error_handler","extend","extend","extend","extend_from_slice","external","external_resource","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_iter","from_iter","from_iter","from_query","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_request","from_request","from_request","from_request","from_request","from_request","from_request","from_request","from_request","from_request","from_request","from_socketlike","from_static","fut","get","get_f32","get_f32_le","get_f32_ne","get_f64","get_f64_le","get_f64_ne","get_hash","get_hash","get_i128","get_i128_le","get_i128_ne","get_i16","get_i16_le","get_i16_ne","get_i32","get_i32_le","get_i32_ne","get_i64","get_i64_le","get_i64_ne","get_i8","get_int","get_int_le","get_int_ne","get_ref","get_u128","get_u128_le","get_u128_ne","get_u16","get_u16_le","get_u16_ne","get_u32","get_u32_le","get_u32_ne","get_u64","get_u64_le","get_u64_ne","get_u8","get_uint","get_uint_le","get_uint_ne","has_remaining","has_remaining_mut","hash","hash","head","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_response","into_response","is_empty","is_empty","len","len","len","len","length","limit","limit","limit","limit","limit","limit","limit","limit","limit","limit","limit","limit","method","mimetype","mimetype","new","new","new","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","patch","permanent","poll","poll","poll_next","poll_next","poll_next","poll_next","post","ptr","ptr","put","put","put","put_bytes","put_bytes","put_f32","put_f32_le","put_f32_ne","put_f64","put_f64_le","put_f64_ne","put_i128","put_i128_le","put_i128_ne","put_i16","put_i16_le","put_i16_ne","put_i32","put_i32_le","put_i32_ne","put_i64","put_i64_le","put_i64_ne","put_i8","put_int","put_int_le","put_int_ne","put_slice","put_slice","put_u128","put_u128_le","put_u128_ne","put_u16","put_u16_le","put_u16_ne","put_u32","put_u32_le","put_u32_ne","put_u64","put_u64_le","put_u64_ne","put_u8","put_uint","put_uint_le","put_uint_ne","reader","redirect","register","remaining","remaining","remaining","remaining_mut","remaining_mut","reserve","resize","resource","resource_path","resource_path","resource_path","resource_path","resource_path","respond_to","respond_to","respond_to","respond_to","respond_to","respond_to","route","route","scope","see_other","serialize","serialize","serialize","service","service","services","set_len","size","size","slice","slice_ref","spare_capacity_mut","split","split_off","split_off","split_to","split_to","status_code","stream","stream","take","temporary","to","to","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","trace","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_bytes","try_into_bytes","try_into_value","try_poll","try_poll","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsplit","using_status_code","vtable","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","write_fmt","write_str","writer","zeroed","_res","buf","length","limit","payload","Logger","borrow","borrow_mut","clone","clone_into","debug","drain","error","fmt","from","from_ref","get_log_level","info","init","into","into_erased","into_request","is_enabled","list","list","log","log","new","root","root_typed","to_erased","to_owned","trace","try_from","try_into","type_id","vzip","warn","TodoController","TodoRead","TodoUpdate","TodoWrite","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create","delete","deserialize","deserialize","done","done","done","fmt","fmt","fmt","from","from","from","from","from_row","get","id","into","into","into","into","into_request","into_request","into_request","into_request","list","new","new","new","pool","serialize","title","title","title","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","Deserialize","Deserialize","Error","Serialize","Serialize","borrow","borrow_mut","classify","column","custom","custom","deserialize","err","fmt","fmt","from","from_json","into","into_request","invalid_type","is_data","is_eof","is_io","is_syntax","line","provide","serialize","source","to_json","to_string","try_from","try_into","type_id","vzip","Settings","borrow","borrow_mut","db_url","default_dburl","default_loglevel","deserialize","fmt","from","into","into_request","log_level","new","num_workers","try_from","try_into","type_id","vzip","Controller","Id","Input","OptionalInput","Output","async_trait","create","delete","get","list","update"],"q":["todors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::clitodors::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::db::Error","","","","","todors::db::query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::errors","","","","","","","","","","","","","","","","","","","","","","todors::grpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::grpc::proto","todors::grpc::proto::healthcheck","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::grpc::proto::healthcheck::health_check_client","","","","","","","","","","","","","","","","","","","","","","","","","todors::grpc::proto::healthcheck::health_check_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::httptodors::http::webtodors::http::web::JsonBody","","","","","todors::logging","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::models","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::serializers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","todors::settings","","","","","","","","","","","","","","","","","","todors::traits","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate shell completion","","Create a new TODO with a title","","","","","","Delete a TODO by ID","","Get a TODO by ID","Serve gRPC over HTTP server","","Serve REST over HTTP server","","","","","","","","","List all TODOs","","","","","","","","","","","Serve either the gRPC or REST over HTTP server","","Update a TODO by ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ID of the TODO to delete","The ID of the TODO to update","The ID of the TODO to get","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Generate completion scripts for your shell","The title of the TODO","The new title of the TODO","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error occurred while decoding a value from a specific …","Column index was out of bounds.","No column found for the given name.","Error occurred while parsing a connection string.","Error returned from the database.","Error occurred while decoding a value.","Represents all the ways a method can fail within SQLx.","A record that can be built from a row returned by the …","","Error communicating with the database backend.","","An alias for <code>Pool</code>, specialized for SQLite.","<code>Pool::close</code> was called while we were waiting in …","A <code>Pool::acquire</code> timed out due to connections not becoming …","Unexpected or invalid data encountered while communicating …","","No rows returned by a query that expected to return at …","Error occurred while attempting to establish a TLS …","Type in query doesn’t exist. Likely due to typo or …","A background worker has crashed.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Types and traits for the <code>query</code> family of functions and …","Make a SQL query.","Statically checked SQL query with <code>println!()</code> style syntax.","Make a SQL query that is mapped to a concrete type using …","A variant of query! which takes a path to an explicitly …","","","","","","","","","","","","","","","","","SQL query that will map its results to owned Rust types.","Raw SQL query with bind parameters. Returned by <code>query</code>.","Raw SQL query with bind parameters, mapped to a concrete …","Raw SQL query with bind parameters, mapped to a concrete …","","Bind a value for use with this SQL query.","Bind a value for use with this SQL query.","Bind a value for use with this SQL query.","","","","","","","","","","Execute the query and return the total number of rows …","Execute multiple queries and return the rows affected from …","Execute the query and return the generated results as a …","Execute the query and return the generated results as a …","Execute the query and return the generated results as a …","Execute the query and return the generated results as a …","Execute the query and return all the generated results, …","Execute the query and return all the generated results, …","Execute the query and return all the generated results, …","Execute the query and return all the generated results, …","Execute multiple queries and return the generated results …","Execute multiple queries and return the generated results …","Execute multiple queries and return the generated results …","Execute multiple queries and return the generated results …","Execute the query and returns exactly one row.","Execute the query and returns exactly one row.","Execute the query and returns exactly one row.","Execute the query and returns exactly one row.","Execute the query and returns at most one row.","Execute the query and returns at most one row.","Execute the query and returns at most one row.","Execute the query and returns at most one row.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Map each row in the result to another type.","Map each row in the result to another type.","","","","If <code>true</code>, the statement will get prepared once and cached …","","","If <code>true</code>, the statement will get prepared once and cached …","","If <code>true</code>, the statement will get prepared once and cached …","","","","","","","","","","","","","","","","","","","","","","","Map each row in the result to another type.","Map each row in the result to another type.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","A default batteries included <code>transport</code> channel.","","","A default batteries included <code>transport</code> server.","","Allow this server to accept http1 requests.","","Create a router with the optional <code>S</code> typed service as the …","Create a router with the <code>S</code> typed service as the first …","Balance a list of <code>Endpoint</code>’s.","Balance a list of <code>Endpoint</code>’s.","Balance a list of <code>Endpoint</code>’s.","","","","","","","Create an <code>Endpoint</code> builder that can create <code>Channel</code>s.","Create a new server builder that can configure a <code>Server</code>.","","","","","","","","","Set the concurrency limit applied to on requests inbound …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create an <code>Endpoint</code> from shared bytes.","Create an <code>Endpoint</code> from a static string.","Sets whether to use an adaptive flow control. Defaults to …","","Set whether HTTP2 Ping frames are enabled on accepted …","","Sets a timeout for receiving an acknowledgement of the …","","","","Sets the max connection-level flow control for HTTP2","Sets the <code>SETTINGS_INITIAL_WINDOW_SIZE</code> option for HTTP2 …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Set the Tower <code>Layer</code> all services will be wrapped in.","Sets the <code>SETTINGS_MAX_CONCURRENT_STREAMS</code> option for HTTP2 …","","Sets the maximum frame size to use for HTTP2.","","","","","","","Set whether TCP keepalive messages are enabled on accepted …","","Set the value of <code>TCP_NODELAY</code> option for accepted …","","Set a timeout on for all request handlers.","","","","Intercept inbound headers and add a <code>tracing::Span</code> to each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Generated client implementations.","Generated server implementations.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","","Generated trait containing gRPC methods that should be …","","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","","","The top-level builder for an Actix Web application.","","","","","","","","","","","","","An outgoing response.","An HTTP Server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait implemented by types that can be converted to an …","","","","","","","","","","","","","","","Add a cookie to this response.","Add a “removal” cookie to the response that matches …","Returns addresses of bound sockets.","Returns addresses of bound sockets and the scheme for it.","Set application (root level) data.","Sets the maximum number of pending connections.","","Resolves socket address(es) and binds server to created …","Opens Unix Domain Socket (UDS) from <code>uds</code> path and binds …","Returns a reference to this response’s body.","","","","","","","","","","","Constructs a response builder with specific HTTP status.","","Sets server connection shutdown timeout.","Sets server client timeout for first request.","","","Run external configuration as part of the application …","","Get an iterator for the cookies set by this response.","","Wraps responder to allow alteration of its response.","Add application (root) data after wrapping in <code>Data&lt;T&gt;</code>.","","Add application data factory that resolves asynchronously.","","Default service that is invoked when no matching resource …","Remove all cookies with the given name from this response.","","Disables signal handling.","Drops body and returns new response.","","The source <code>error</code> for this response","","Returns reference to the response-local data/extensions …","","Returns reference to the response-local data/extensions …","","Register an external resource.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Create an error response.","Creates route handler with <code>actix_web::guard::Get</code>.","","Returns a reference to response head.","Returns a mutable reference to response head.","Get the headers from the response","Get a mutable reference to the headers","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the response body, dropping all other parts.","","Returns split head and body.","","","","","","Keep-alive status for this connection","Sets server keep-alive preference.","","Binds to existing listener for accepting incoming …","Binds to existing Unix Domain Socket (UDS) listener.","","Map the current body type to another using a closure, …","Map the current body to a type-erased <code>BoxBody</code>.","Map the current body type <code>B</code> to <code>EitherBody::Left(B)</code>.","Map the current body type <code>B</code> to <code>EitherBody::Right(B)</code>.","Sets the per-worker maximum concurrent TLS connection …","Sets the per-worker maximum number of concurrent …","Create application builder. Application can be configured …","","Constructs a response.","Create new HTTP server with application factory","Sets function that will be called once before each …","","","","Convert self to <code>HttpResponse</code>.","","Configure route for a specific path.","Start listening for incoming connections.","Sets server host name.","Register HTTP service.","","Sets new body.","Sets timeout for graceful worker shutdown of workers.","","Get the response status code","Set the <code>StatusCode</code> for this response","Flags the <code>System</code> to exit after server shutdown.","","","","","","","","","","","","","","","","","Connection upgrade status","","","","","","Essentials helper functions and types for application …","Constructs a response with body","Sets max number of threads for each worker’s blocking …","Sets number of workers to start (per bind address).","Registers an app-wide middleware.","Registers an app-wide function middleware.","","Read bytes from a buffer.","A trait for values that provide sequential write access to …","A cheaply cloneable and sliceable chunk of contiguous …","A unique reference to a contiguous slice of memory.","Application data wrapper and extractor.","Combines two extractor or responder types into a single …","","URL encoded payload extractor and responder.","<code>Form</code> extractor configuration.","Extract typed headers from the request.","JSON extractor and responder.","Future that resolves to some <code>T</code> when parsed from a JSON …","<code>Json</code> extractor configuration.","A value of type <code>L</code>.","Extract typed data from request path segments.","Path extractor configuration","Extract a request’s raw payload stream.","Configuration for request payloads.","Extract typed information from the request’s query.","Query extractor configuration.","Stream that reads request line by line.","An HTTP service for redirecting one path to another path …","Request-local data extractor.","A value of type <code>R</code>.","Enables parts of app configuration to be declared …","Future that resolves to some <code>T</code> when parsed from a URL …","Advance the internal cursor of the Buf","","","Advance the internal cursor of the BufMut","","Add arbitrary app data item.","","","","","","Executes blocking function on a thread pool, returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of bytes the <code>BytesMut</code> can hold without …","Creates an adaptor which will chain this buffer with …","Creates an adapter which will chain this buffer with …","","Returns a slice starting at the current position and of …","","","Returns a mutable slice starting at the current BufMut …","","Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>…","Clears the buffer, removing all data.","","Clears the buffer, removing all data. Existing capacity is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run external configuration as part of the application …","Set predicate for allowed content types.","","Sets whether or not the request must have a <code>Content-Type</code> …","","Creates <code>Bytes</code> instance from slice, by copying it.","Consumes <code>len</code> bytes inside self and returns new instance of …","","","Copies bytes from <code>self</code> into <code>dst</code>.","Add shared app data item.","","","","","","","","","","","Default service to be used if no matching resource could …","Creates a new route with <code>DELETE</code> method guard.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set custom error handler","Set custom error handler.","Set custom error handler.","Set custom error handler","","","","Appends given bytes to this <code>BytesMut</code>.","","Register an external resource.","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> into an immutable <code>Bytes</code>.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Deserialize a <code>T</code> from the URL encoded query parameter …","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Bytes</code> from a static slice.","","Creates a new route with <code>GET</code> method guard.","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","","","Gets a signed 128 bit integer from <code>self</code> in big-endian byte …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 128 bit integer from <code>self</code> in native-endian …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in native-endian …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in native-endian …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in native-endian …","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets a signed n-byte integer from <code>self</code> in native-endian …","Returns reference to inner <code>T</code>.","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in little-endian …","Gets an unsigned 16 bit integer from <code>self</code> in native-endian …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in native-endian …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in little-endian …","Gets an unsigned 64 bit integer from <code>self</code> in native-endian …","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in little-endian …","Gets an unsigned n-byte integer from <code>self</code> in native-endian …","Returns true if there are any more bytes to consume","Returns true if there is space in <code>self</code> for more bytes.","","","Creates a new route with <code>HEAD</code> method guard.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Unwrap to inner Payload type.","Unwraps to the internal <code>Arc&lt;T&gt;</code>","Consumes the <code>ReqData</code>, returning its wrapped data.","","","Unwrap into inner <code>T</code> value.","Unwrap into the inner <code>T</code> value.","Unwrap into inner <code>T</code> value.","Unwrap into inner <code>T</code> value.","Unwrap into inner <code>T</code> value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the <code>Bytes</code> has a length of 0.","Returns true if the <code>BytesMut</code> has a length of 0.","Returns the number of bytes contained in this <code>Bytes</code>.","Returns the number of bytes contained in this <code>BytesMut</code>.","","","","Creates an adaptor which can write at most <code>limit</code> bytes to …","Set maximum accepted payload size. The default limit is …","Set maximum accepted payload size. The default limit is …","Set maximum accepted payload size. The default limit is …","Set maximum accepted payload size. By default this limit …","Set maximum accepted payload size. By default this limit …","Set maximum accepted payload size in bytes. The default …","","","","","","Creates a new route with specified method guard.","Set required mime type of the request. By default mime …","","Creates a new empty <code>Bytes</code>.","Creates a new <code>BytesMut</code> with default capacity.","Create a new future to decode a URL encoded request …","Create a new future to decode a JSON request payload.","Create a new stream to read request line by line.","Create new <code>Data</code> instance.","Construct a new <code>Redirect</code> service that matches a path.","Create new instance with a size limit (in bytes) and no …","","","","","","","","","","","","","","","","","Creates a new route with <code>PATCH</code> method guard.","Use the “308 Permanent Redirect” status when …","","","","","","","Creates a new route with <code>POST</code> method guard.","","","Creates a new route with <code>PUT</code> method guard.","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","","Put <code>cnt</code> bytes <code>val</code> into <code>self</code>.","","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes a signed 128 bit integer to <code>self</code> in the big-endian …","Writes a signed 128 bit integer to <code>self</code> in little-endian …","Writes a signed 128 bit integer to <code>self</code> in native-endian …","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …","Writes a signed 16 bit integer to <code>self</code> in little-endian …","Writes a signed 16 bit integer to <code>self</code> in native-endian …","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …","Writes a signed 32 bit integer to <code>self</code> in little-endian …","Writes a signed 32 bit integer to <code>self</code> in native-endian …","Writes a signed 64 bit integer to <code>self</code> in the big-endian …","Writes a signed 64 bit integer to <code>self</code> in little-endian …","Writes a signed 64 bit integer to <code>self</code> in native-endian …","Writes a signed 8 bit integer to <code>self</code>.","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","","Writes an unsigned 128 bit integer to <code>self</code> in the …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …","Writes an unsigned 16 bit integer to <code>self</code> in little-endian …","Writes an unsigned 16 bit integer to <code>self</code> in native-endian …","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …","Writes an unsigned 32 bit integer to <code>self</code> in little-endian …","Writes an unsigned 32 bit integer to <code>self</code> in native-endian …","Writes an unsigned 64 bit integer to <code>self</code> in the …","Writes an unsigned 64 bit integer to <code>self</code> in little-endian …","Writes an unsigned 64 bit integer to <code>self</code> in native-endian …","Writes an unsigned 8 bit integer to <code>self</code>.","Writes an unsigned n-byte integer to <code>self</code> in big-endian …","Writes an unsigned n-byte integer to <code>self</code> in the …","Writes an unsigned n-byte integer to <code>self</code> in the …","Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>…","Create a relative or absolute redirect.","","Returns the number of bytes between the current position …","","","Returns the number of bytes that can be written from the …","","Reserves capacity for at least <code>additional</code> more bytes to be …","Resizes the buffer so that <code>len</code> is equal to <code>new_len</code>.","Creates a new resource for a specific path.","","","","","","","","","","","","Creates a new un-configured route.","Configure route for a specific path.","Creates scope for common path prefix.","Use the “303 See Other” status when responding.","","","","Creates a raw service for a specific path.","Register HTTP service factory.","","Sets the length of the buffer.","","","Returns a slice of self for the provided range.","Returns a slice of self that is equivalent to the given …","Returns the remaining spare capacity of the buffer as a …","Removes the bytes from the current view, returning them in …","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the buffer into two at the given index.","","","","Creates an adaptor which will read at most <code>limit</code> bytes …","Use the “307 Temporary Redirect” status when …","Creates a new any-method route with handler.","Construct a new <code>Redirect</code> to use as a responder.","","","","","","","","","","","","","","","","","","","Creates a new route with <code>TRACE</code> method guard.","Shortens the buffer, keeping the first <code>len</code> bytes and …","Shortens the buffer, keeping the first <code>len</code> bytes and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Absorbs a <code>BytesMut</code> that was previously split off.","Allows the use of custom status codes for less common …","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>BytesMut</code> with the specified capacity.","","","Creates an adaptor which implements the <code>Write</code> trait for …","Creates a new <code>BytesMut</code>, which is initialized with zero.","","","Length as reported by <code>Content-Length</code> header, if present.","","","Logging handle used to execute logging statements","","","","","Log debug level record","","Log error level record","","Returns the argument unchanged.","","","Log info level record","","Calls <code>U::from(self)</code>.","Convert to default, “erased” type: …","","","Get list of key-value pairs assigned to this <code>Logger</code>","","","Log one logging <code>Record</code>","Build a child logger","Build a root <code>Logger</code>","Build a root <code>Logger</code> that retains <code>drain</code> type","Create a copy with “erased” type","","Log trace level record","","","","","Log warning level record","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <strong>data structure</strong> that can be deserialized from any data …","","This type represents all possible errors that can occur …","A <strong>data structure</strong> that can be serialized into any data …","","","","Categorizes the cause of this error.","One-based column number at which the error was detected.","","","Deserialize this value from the given Serde deserializer.","","","","Returns the argument unchanged.","Deserialize an instance of type <code>T</code> from a string of JSON …","Calls <code>U::from(self)</code>.","","","Returns true if this error was caused by input data that …","Returns true if this error was caused by prematurely …","Returns true if this error was caused by a failure to read …","Returns true if this error was caused by input that was not","One-based line number at which the error was detected.","","Serialize this value into the given Serde serializer.","","Serialize the given data structure as a String of JSON.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,8,0,8,9,0,9,0,0,0,0,0,0,0,0,8,0,7,0,0,0,0,0,0,0,0,7,0,8,4,10,11,12,13,14,15,16,4,10,11,12,13,14,15,16,7,8,9,7,8,9,22,4,7,8,9,10,11,12,13,14,15,16,22,4,7,8,9,10,11,12,13,14,15,16,4,4,4,22,14,4,7,8,9,10,11,12,13,14,15,16,22,4,7,8,9,10,11,12,13,14,15,16,4,7,8,9,10,11,12,13,14,15,16,4,7,8,9,10,11,12,13,14,15,16,0,4,10,11,12,13,14,15,16,0,7,8,9,10,11,13,14,15,22,4,7,8,9,10,11,12,13,14,15,16,22,4,7,8,9,10,11,12,13,14,15,16,22,22,10,11,0,16,12,14,22,4,7,8,9,10,11,12,13,14,15,16,22,4,7,8,9,10,11,12,13,14,15,16,22,4,7,8,9,10,11,12,13,14,15,16,14,4,7,8,9,10,11,12,13,14,15,16,4,7,8,9,10,11,12,13,14,15,16,22,4,7,8,9,10,11,12,13,14,15,16,29,29,29,29,29,29,0,0,0,29,29,0,29,29,29,0,29,29,29,29,29,29,33,29,33,33,0,33,33,29,29,33,29,29,29,29,33,197,29,33,29,29,33,33,33,0,29,0,0,0,0,0,33,29,29,29,33,29,33,29,33,29,33,198,199,198,199,200,0,0,0,0,41,41,42,46,41,50,42,46,41,50,42,46,41,41,41,41,50,42,46,41,50,42,46,41,50,42,46,41,50,42,46,41,50,42,46,41,50,42,46,50,42,46,41,50,42,46,41,50,42,46,41,50,50,42,41,41,50,42,42,46,46,41,41,50,42,46,41,50,42,46,41,41,50,42,46,41,50,42,46,41,50,42,46,41,50,41,50,42,46,41,50,42,46,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,54,54,54,54,58,58,58,66,58,54,66,58,54,58,54,58,58,66,58,54,58,54,54,54,66,54,66,58,54,66,58,54,58,54,58,58,54,54,54,54,54,54,54,54,54,54,66,58,54,58,66,58,54,54,54,54,54,54,58,58,0,54,58,54,54,54,54,54,54,58,54,54,54,66,58,54,66,58,54,66,58,54,66,58,54,0,0,0,0,0,0,0,67,75,67,75,67,75,67,75,67,75,67,75,67,75,67,75,67,75,67,75,67,75,0,0,67,75,67,75,67,75,67,75,67,75,67,75,67,75,67,75,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,0,0,0,85,85,87,86,85,87,86,85,86,85,85,84,87,85,87,85,87,85,87,86,85,85,87,85,85,87,86,85,85,87,86,85,85,85,85,85,85,85,85,85,85,87,85,87,86,85,87,86,85,87,86,85,87,86,85,85,90,90,0,0,90,90,201,90,90,90,90,90,90,90,90,0,0,90,90,0,0,0,0,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,0,0,0,0,90,90,90,90,0,90,90,90,90,90,90,90,90,90,90,90,90,90,93,90,90,93,93,96,93,93,93,93,90,96,100,119,90,93,96,100,119,90,93,90,93,93,93,93,0,96,100,90,0,201,96,96,96,96,96,90,0,93,90,96,90,90,90,96,90,96,96,93,96,90,96,100,119,90,90,90,90,90,93,90,0,0,90,90,90,90,0,0,96,100,119,90,93,90,96,90,96,100,119,90,93,90,93,0,93,93,100,90,90,90,90,93,93,96,100,90,93,93,93,119,90,201,90,96,93,93,96,96,90,93,93,90,90,93,96,100,119,90,93,96,100,119,90,93,96,100,119,90,93,0,90,96,100,119,90,93,0,90,93,93,96,96,163,0,0,0,0,0,0,163,0,0,0,0,0,0,140,0,0,0,0,0,0,0,0,0,140,0,0,202,62,126,203,126,98,98,126,62,126,104,0,98,62,62,126,126,162,163,158,164,101,129,130,140,139,131,132,102,133,104,134,135,136,137,98,62,126,126,162,163,158,164,101,129,130,140,139,131,132,102,133,104,134,135,136,137,164,126,126,202,203,164,202,62,126,203,126,202,62,62,126,62,126,101,129,130,131,132,133,134,135,136,137,62,126,101,129,130,131,132,133,134,135,136,137,62,126,139,132,104,136,98,133,133,133,133,62,202,62,126,202,98,62,126,62,126,131,133,134,135,137,98,98,0,62,126,101,130,139,132,102,104,136,126,139,132,102,104,136,62,126,62,162,164,62,62,62,62,62,62,62,126,126,126,126,126,126,126,140,139,132,104,136,62,126,140,139,132,104,136,162,164,131,133,134,137,131,133,134,137,126,126,126,126,98,98,62,62,62,126,126,126,101,129,130,140,139,139,132,132,102,102,104,104,136,136,126,98,62,62,62,62,62,62,62,62,62,62,62,126,126,126,162,163,158,164,101,101,129,130,140,139,131,132,102,133,104,104,104,134,135,136,137,129,104,104,104,104,62,126,126,136,62,126,101,129,130,131,132,133,134,135,136,137,62,62,158,101,130,140,139,132,102,104,136,104,62,162,0,202,202,202,202,202,202,62,126,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,101,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,203,62,126,0,98,62,126,162,163,158,164,101,129,130,140,139,131,132,102,133,104,134,135,136,137,162,163,158,101,130,140,140,139,132,102,104,136,62,62,126,126,98,62,126,162,163,158,164,101,129,130,140,139,131,132,102,133,104,134,135,136,137,62,126,62,126,62,126,62,126,162,203,162,163,164,131,133,135,162,164,131,133,135,0,135,135,62,126,162,163,164,101,129,135,62,62,62,62,62,62,126,126,126,126,126,126,139,132,104,136,0,129,162,163,62,126,158,164,0,62,126,0,203,126,203,126,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,126,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,202,0,129,202,62,126,203,126,126,126,0,139,132,102,104,136,62,126,129,140,139,102,0,98,0,129,101,139,102,0,98,98,126,62,126,62,62,126,126,62,126,62,126,129,162,164,202,129,0,129,129,62,126,101,129,130,131,132,133,134,135,136,137,139,132,102,104,136,0,62,126,98,62,126,162,163,158,164,101,129,130,140,139,131,132,102,133,104,134,135,136,137,98,62,126,162,163,158,164,101,129,130,140,139,131,132,102,133,104,134,135,136,137,62,126,62,162,163,158,164,98,62,126,162,163,158,164,101,129,130,140,139,131,132,102,133,104,134,135,136,137,126,129,62,98,62,126,162,163,158,164,101,129,130,140,139,131,132,102,133,104,134,135,136,137,126,126,126,203,126,204,204,204,204,204,0,26,26,26,26,0,26,0,26,26,26,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,0,0,0,0,0,187,190,188,189,187,190,188,189,187,187,188,189,190,188,189,190,188,189,187,190,188,189,190,187,190,187,190,188,189,187,190,188,189,187,187,188,189,187,190,190,188,189,187,190,188,189,187,190,188,189,187,190,188,189,187,187,190,188,189,0,0,0,0,0,53,53,53,53,53,53,205,53,53,53,53,0,53,53,53,53,53,53,53,53,53,206,53,0,53,53,53,53,53,0,195,195,195,0,0,195,195,195,195,195,195,195,195,195,195,195,195,0,207,207,207,207,0,207,207,207,207,207],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],0,[[],3],0,0,[[4,5],6],[[7,5],6],[[8,5],6],[[9,5],6],[[10,5],6],[[11,5],6],[[12,5],6],[[13,5],6],[[14,5],6],[[15,5],6],[[16,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,[[2,[4,18]]]],[17,[[2,[7,18]]]],[17,[[2,[8,18]]]],[17,[[2,[9,18]]]],[17,[[2,[10,18]]]],[17,[[2,[11,18]]]],[17,[[2,[12,18]]]],[17,[[2,[13,18]]]],[17,[[2,[14,18]]]],[17,[[2,[15,18]]]],[17,[[2,[16,18]]]],[17,[[2,[4,18]]]],[17,[[2,[7,18]]]],[17,[[2,[8,18]]]],[17,[[2,[9,18]]]],[17,[[2,[10,18]]]],[17,[[2,[11,18]]]],[17,[[2,[12,18]]]],[17,[[2,[13,18]]]],[17,[[2,[14,18]]]],[17,[[2,[15,18]]]],[17,[[2,[16,18]]]],[[19,3]],[[],[[21,[20]]]],[[],[[21,[20]]]],[[],[[21,[20]]]],[[],[[21,[20]]]],[[],[[21,[20]]]],[[],[[21,[20]]]],[[],[[21,[20]]]],[[],[[21,[20]]]],[[8,22]],[23,24],[23,24],[23,24],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[26,22],0,0,[27],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,[[4,17],[[2,[18]]]],[[7,17],[[2,[18]]]],[[8,17],[[2,[18]]]],[[9,17],[[2,[18]]]],[[10,17],[[2,[18]]]],[[11,17],[[2,[18]]]],[[12,17],[[2,[18]]]],[[13,17],[[2,[18]]]],[[14,17],[[2,[18]]]],[[15,17],[[2,[18]]]],[[16,17],[[2,[18]]]],[[4,17],[[2,[18]]]],[[7,17],[[2,[18]]]],[[8,17],[[2,[18]]]],[[9,17],[[2,[18]]]],[[10,17],[[2,[18]]]],[[11,17],[[2,[18]]]],[[12,17],[[2,[18]]]],[[13,17],[[2,[18]]]],[[14,17],[[2,[18]]]],[[15,17],[[2,[18]]]],[[16,17],[[2,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[29,[[21,[30]]]],[[]],[[]],[[]],[[]],0,[[23,[21,[31]]],[[2,[32,29]]]],[[],33],[33],[[29,5],[[2,[34]]]],[[29,5],[[2,[34]]]],[[33,5],[[2,[34]]]],[35,29],[36,29],[[]],[[],29],[[]],[[],[[2,[29]]]],[[]],[[]],[29,[[21,[[38,[30,37]]]]]],[[],25],[[],25],[33,39],0,[32,[[2,[29]]]],[40],0,[23,41],0,[23,42],0,[33,43],[29,[[21,[44]]]],[[],45],[[],2],[[],2],[[],2],[[],2],[[],28],[[],28],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[41,41],[42,42],[46,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[41,47],[41,47],[41,[[49,[[38,[48,37]]]]]],[50,[[49,[[38,[48,37]]]]]],[42,[[49,[[38,[48,37]]]]]],[46,[[49,[[38,[48,37]]]]]],[41,47],[50,47],[42,47],[46,47],[41,[[49,[[38,[48,37]]]]]],[50,[[49,[[38,[48,37]]]]]],[42,[[49,[[38,[48,37]]]]]],[46,[[49,[[38,[48,37]]]]]],[41,47],[50,47],[42,47],[46,47],[41,47],[50,47],[42,47],[46,47],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[41,[[50,[[0,[51,52]]]]]],[50,[[50,[[0,[51,52]]]]]],0,0,[41,24],[[41,24],41],[50,24],[42,24],[[42,24],42],[46,24],[[46,24],46],0,[41,23],[50,23],[42,23],[46,23],[41,21],[50,21],[42,21],[46,21],0,[41,21],[50,21],[42,21],[46,21],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[41,50],[50,[[50,[[0,[51,52]]]]]],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[1,5],6],[[1,5],6],[[]],[53,1],[29,1],[36,1],[[]],[[],25],[40],[1,[[21,[44]]]],[[],45],[[],2],[[],2],[[],28],[[]],0,0,0,0,0,[[54,24],54],0,[[54,21],55],[54,55],[56],[56],[57,58],[[]],[[]],[[]],[[]],[[]],[[]],[59,60],[[],[[54,[61]]]],[[58,[65,[[64,[62,63]]]]]],[65],[[66,[25,[67]]],[[49,[[38,[47]]]]]],[58,58],[54,54],[[]],[[]],0,[[54,56],54],[[],66],[[],[[54,[61]]]],[[66,5],6],[[58,5],[[2,[34]]]],[[54,5],[[2,[34]]]],[[]],[[]],[[]],[[]],[[]],[[[68,[62]]],[[2,[60,69]]]],[23,60],[[54,[21,[24]]],54],0,[[54,[21,[70]]],54],0,[[54,[21,[70]]],54],0,0,0,[[54,[68,[[21,[31]]]]],54],[[54,[68,[[21,[31]]]]],54],[[]],[[]],[[]],[[],71],[[],25],[[],25],[[],25],[54,[[54,[72]]]],[[54,[68,[[21,[31]]]]],54],0,[[54,[68,[[21,[31]]]]],54],0,[73,[[74,[2]]]],[[58,73],[[74,[2]]]],0,0,0,[[54,[21,[70]]],54],0,[[54,24],54],0,[[54,70],54],0,[[]],[[]],[54,54],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],28],[[],28],[[],28],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[67],[75],[67,67],[75,75],[[]],[[]],[[],67],[[],75],[67,56],[75,56],[[67,67],24],[[75,75],24],[[67,5],6],[[75,5],6],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[],25],[[],25],0,0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],28],[[],28],[[]],[[]],0,[[76,77],76],[[]],[[]],[[76,[78,[67]]],[[2,[[79,[75]],63]]]],[[[76,[80]]],[[76,[80]]]],[[]],[[],[[2,[[76,[58]],81]]]],[[[76,[82]],5],6],[[]],[[]],0,[[]],[[],25],[[76,56],76],[[76,56],76],[[],76],[[76,77],76],[[]],[[],2],[[],2],[[],28],[[]],[[],[[76,[83]]]],[59,76],0,0,0,0,[[[85,[84]],77],[[85,[84]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[86,[84]],[25,[67]]]],[[85,65]],[65],[[[25,[67]]],[[49,[[38,[47]]]]]],[[[87,[84]]],[[87,[84]]]],[[[85,[84]]],[[85,[84]]]],[[]],[[]],[[[87,[82]],5],6],[[[85,[[0,[82,84]]]],5],6],[[]],[[]],[[]],[[[88,[84]]],[[85,[84]]]],[[]],[[]],0,[[]],[[]],[[]],[[],71],[[],25],[[],25],[[],25],[[[85,[84]],56],[[85,[84]]]],0,[[[85,[84]],56],[[85,[84]]]],0,[84,[[85,[84]]]],[[85,73],[[74,[2]]]],[73,[[74,[2]]]],[[[85,[84]],77],[[85,[84]]]],0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],28],[[],28],[[],28],[[]],[[]],[[]],[84,[[83,[[85,[84]]]]]],[[],89],[[],89],0,0,[[],89],[[],89],0,[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],0,0,[[],89],[[],89],0,0,0,0,0,[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],0,0,0,0,0,[[],89],[[],89],[[],89],[[],89],0,[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],0,[[90,91],[[2,[92]]]],[[90,91],[[2,[92]]]],[93,[[95,[94,37]]]],[93,[[95,[37]]]],[96,96],[[93,31],93],0,[93,[[2,[93,36]]]],[93,[[2,[93,36]]]],[90],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[97,89],0,[[93,70],93],[[93,70],93],0,[98],[96,96],0,[90,99],[[[101,[100]],102],90],[[],103],[96,96],0,[96,96],0,[96,96],[[90,23],56],[[[101,[100]],104],90],[93,93],[90,90],0,[90,[[21,[105]]]],0,[90,[[107,[106]]]],0,[90,[[108,[106]]]],0,[96,96],0,0,[[90,5],[[2,[34]]]],[[]],[[]],[[]],[[]],[109,90],[110,90],[105,[[90,[111]]]],[89,[[90,[111]]]],[[]],[[[68,[105]]],[[90,[111]]]],0,[[[101,[100]],104],90],[90,112],[90,112],[90,113],[90,113],0,[[],90],[[]],[[]],[[]],[[]],[[]],[90],[96,114],[90],[[],25],[[],25],[[],25],[[],25],[[],25],[90,24],[93,93],[[[101,[100]]],90],[[93,115],[[2,[93,36]]]],[[93,116],[[2,[93,36]]]],0,[90,90],[90,[[90,[111]]]],[90,[[90,[117]]]],[90,[[90,[117]]]],[[93,56],93],[[93,56],93],[[],[[96,[118]]]],[26,[[101,[100]]]],[97,[[90,[111]]]],[[],93],[93,93],0,[[119,120]],0,[121,90],[[90,121],90],[[96,23,122],96],[93,123],[93,93],[96,96],0,[90,90],[[93,43],93],0,[90,97],[90,97],[93,93],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],28],[[],28],[[],28],[[],28],[[],28],[[[101,[100]],104,102],90],[90,24],[[]],[[]],[[]],[[]],[[]],0,[97,90],[[93,56],93],[[93,56],93],[96,[[96,[[125,[124]]]]]],[96,[[96,[[125,[124]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[56],[[62,56]],[[126,56]],[56],[[126,56]],[98,98],0,[126],[62],[126],[104],[[],47],[[]],[[]],[62],[126],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[126],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[126,56],[[],127],[[],127],0,[[]],[62],[126],[[],128],[126,128],[[],56],[62],[62],[126],[62,62],[126,126],[101,101],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[62,62],138],[[126,126],138],[[139,139],138],[[132,132],138],[[104,104],138],[[136,136],138],[98,98],[133,133],0,[[133,24],133],0,[[],62],[56,62],[[62,56],62],[[126,56],62],[[]],[98,98],0,0,[[],62],[[],126],[[],131],[[],133],[[],134],[[],135],[[],137],0,[98,98],[[],122],[62],[126],[101,88],[130],[139],[132],[102],[104],[136],[126],[139],[132],[102],[104],[136],[62],[126],[62,56],0,0,[[62,126],24],[62,24],[[62,45],24],[[62,23],24],[[62,62],24],[62,24],[[62,95],24],[[126,45],24],[[126,95],24],[126,24],[126,24],[[126,23],24],[[126,126],24],[[126,62],24],[[140,140],24],[[139,139],24],[[132,132],24],[[104,104],24],[[136,136],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,[131,131],[133,133],[134,134],[137,137],[126],[126],[126],[126],0,[98,98],[[62,5],[[2,[34]]]],[[62,5],[[2,[34]]]],[[62,5],[[2,[34]]]],[[126,5],[[2,[34]]]],[[126,5],[[2,[34]]]],[[126,5],[[2,[34]]]],[[101,5],[[2,[34]]]],[[129,5],[[2,[34]]]],[[130,5],[[2,[34]]]],[[140,5],[[2,[34]]]],[[139,5],[[2,[34]]]],[[139,5],[[2,[34]]]],[[132,5],[[2,[34]]]],[[132,5],[[2,[34]]]],[[102,5],[[2,[34]]]],[[102,5],[[2,[34]]]],[[104,5],[[2,[34]]]],[[104,5],[[2,[34]]]],[[136,5],[[2,[34]]]],[[136,5],[[2,[34]]]],[126,62],[[]],[141,62],[[[95,[142,37]]],62],[[],62],[126,62],[23,62],[45,62],[143,62],[[]],[144,62],[145,62],[[[38,[37]]],62],[23,126],[[],126],[[]],[[]],[[]],[[]],[[]],[[]],[88,101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[146],[[],104],[[]],[[]],[[]],[[]],0,[147],[147],[[]],[[]],[[],62],[[],126],[[],126],[23,[[2,[136,148]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[121,149]],[65,[[49,[[38,[47,37]]]]]],[[121,149]],[[121,149]],[[121,149]],[[121,149]],[[121,149]],[[121,149]],[[121,149]],[[121,149]],[[121,149]],[147],[[],62],0,[[],122],[[],150],[[],150],[[],150],[[],151],[[],151],[[],151],[[],43],[[],43],[[],152],[[],152],[[],152],[[],153],[[],153],[[],153],[[],154],[[],154],[[],154],[[],39],[[],39],[[],39],[[],155],[56,39],[56,39],[56,39],[101],[[],156],[[],156],[[],156],[[],157],[[],157],[[],157],[[],31],[[],31],[[],31],[[],43],[[],43],[[],43],[[],142],[56,43],[56,43],[56,43],[[],24],[[],24],[62],[126],[[],122],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[158,[[149,[[49,[[38,[48,37]]]]]]]],[101,88],[130],[[[140,[102,139]]]],[[[140,[139,102]]]],[139],[132],[102],[104],[136],[62],[62],[126],[126],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[62,[[160,[[64,[62,159]]]]]],[126,[[160,[[64,[62,159]]]]]],[62,24],[126,24],[62,56],[126,56],0,0,0,[56,161],[[162,56],162],[[163,56],163],[[164,56],164],[[131,56],131],[[133,56],133],[[135,56],135],0,0,0,0,0,[165,122],[[135,166],135],0,[[],62],[[],126],[[121,149],162],[[121,149,[21,[167]],24],163],[[],164],[[],101],[[[68,[[168,[23]]]],[68,[[168,[23]]]]],129],[56,135],[[62,95],[[21,[138]]]],[62,[[21,[138]]]],[62,[[21,[138]]]],[[62,23],[[21,[138]]]],[[62,45],[[21,[138]]]],[[62,62],[[21,[138]]]],[[126,45],[[21,[138]]]],[[126,126],[[21,[138]]]],[[126,23],[[21,[138]]]],[126,[[21,[138]]]],[[126,95],[[21,[138]]]],[126,[[21,[138]]]],[[139,139],[[21,[138]]]],[[132,132],[[21,[138]]]],[[104,104],[[21,[138]]]],[[136,136],[[21,[138]]]],[[],122],[129,129],[[[49,[162]],73],74],[[[49,[163]],73],74],[[[49,[62]],73],[[74,[[21,[[2,[62]]]]]]]],[[[49,[126]],73],[[74,[[21,[[2,[62]]]]]]]],[[[49,[158]],73],[[74,[21]]]],[[[49,[164]],73],[[74,[21]]]],[[],122],0,0,[[],122],[[]],[126],[[142,56]],[[126,142,56]],[150],[150],[150],[151],[151],[151],[152],[152],[152],[153],[153],[153],[154],[154],[154],[39],[39],[39],[155],[[39,56]],[[39,56]],[[39,56]],[[]],[126],[156],[156],[156],[157],[157],[157],[31],[31],[31],[43],[43],[43],[142],[[43,56]],[[43,56]],[[43,56]],[[],169],[[[68,[[168,[23]]]],[68,[[168,[23]]]]],129],[[129,120]],[[],56],[62,56],[126,56],[[],56],[126,56],[[126,56]],[[126,56,142]],[[],[[171,[170]]]],[[],172],[[],172],[[],172],[[],172],[[],172],[[62,121],90],[[126,121],90],[[129,121],90],[[140,121],90],[[139,121],90],[[102,121],90],[[],122],[[98,23,122],98],[23,[[174,[173]]]],[129,129],[101,2],[139,2],[102,2],[[],175],[98,98],0,[[126,56]],[62,176],[126,176],[[62,[177,[56]]],62],[62,62],[126],[126,126],[[62,56],62],[[126,56],126],[[62,56],62],[[126,56],126],0,0,0,[56,178],[129,129],[[],122],[[[68,[[168,[23]]]]],129],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],122],[[62,56]],[[126,56]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[62,[[2,[62,62]]]],[126,[[2,[62,126]]]],[62,[[2,[179]]]],[[49,73],74],[[49,73],74],[[49,73],[[74,[[21,[2]]]]]],[[49,73],[[74,[[21,[2]]]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[126,126]],[[129,97],129],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,126],[[126,180],[[2,[34]]]],[[126,23],[[2,[34]]]],[[],181],[56,126],0,0,0,0,0,0,[[]],[[]],[26,26],[[]],0,0,0,[[26,5],[[2,[34]]]],[[]],[[]],[23,182],0,[23,26],[[]],[26,[[26,[[88,[183]]]]]],[[],25],[[26,182],24],[26,184],0,[[26,185,184],2],[[26,185]],[[26,186],26],[186,[[26,[[88,[183]]]]]],[186,26],[26,[[26,[[88,[183]]]]]],[[]],0,[[],2],[[],2],[[],28],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[187,[[49,[[38,[47]]]]]],[187,[[49,[[38,[47]]]]]],[[],[[2,[188]]]],[[],[[2,[189]]]],0,0,0,[[190,5],6],[[188,5],6],[[189,5],6],[[]],[[]],[[]],[[]],[[],[[191,[190]]]],[187,[[49,[[38,[47]]]]]],0,[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[187,[[49,[[38,[47]]]]]],[32,187],[[45,[21,[24]]],188],[[[21,[45]],[21,[24]]],189],0,[190,2],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],28],[[],28],[[],28],[[],28],[187,[[49,[[38,[47]]]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[53,192],[53,56],[[],53],[[],53],[[],2],0,[[53,5],[[2,[34]]]],[[53,5],[[2,[34]]]],[[]],[23,[[2,[53]]]],[[]],[[],25],[[193,194],53],[53,24],[53,24],[53,24],[53,24],[53,56],[40],[[],2],[53,[[21,[44]]]],[[],[[2,[45,53]]]],[[],45],[[],2],[[],2],[[],28],[[]],0,[[]],[[]],0,[[],45],[[],45],[[],[[2,[195]]]],[[195,5],6],[[]],[[]],[[],25],0,[[],[[2,[195,196]]]],0,[[],2],[[],2],[[],28],[[]],0,0,0,0,0,0,[[],[[49,[[38,[47]]]]]],[[],[[49,[[38,[47]]]]]],[[],[[49,[[38,[47]]]]]],[[],[[49,[[38,[47]]]]]],[[],[[49,[[38,[47]]]]]]],"p":[[4,"TodoErrors"],[4,"Result"],[3,"Command"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[4,"Commands"],[4,"Local"],[4,"Serve"],[3,"HttpServerAddr"],[3,"GrpcServerAddr"],[3,"Create"],[3,"Delete"],[3,"Update"],[3,"Get"],[3,"Completion"],[3,"ArgMatches"],[6,"Error"],[8,"Generator"],[3,"Id"],[4,"Option"],[3,"CliState"],[15,"str"],[15,"bool"],[3,"Request"],[3,"Logger"],[4,"Shell"],[3,"TypeId"],[4,"Error"],[8,"DatabaseError"],[15,"u32"],[6,"Pool"],[3,"QueryResult"],[3,"Error"],[4,"MigrateError"],[3,"Error"],[3,"Global"],[3,"Box"],[15,"i64"],[3,"Demand"],[3,"Query"],[3,"QueryAs"],[15,"u64"],[8,"Error"],[3,"String"],[3,"QueryScalar"],[8,"Future"],[8,"Stream"],[3,"Pin"],[3,"Map"],[8,"FnMut"],[8,"Send"],[3,"Error"],[3,"Server"],[3,"Router"],[15,"usize"],[8,"Iterator"],[3,"Channel"],[3,"Uri"],[3,"Endpoint"],[3,"Identity"],[3,"Bytes"],[3,"Status"],[3,"UnsyncBoxBody"],[3,"Request"],[3,"TodoHealthCheck"],[3,"Ping"],[8,"Into"],[3,"InvalidUri"],[3,"Duration"],[3,"IntoMakeService"],[3,"Stack"],[3,"Context"],[4,"Poll"],[3,"Pong"],[3,"HealthCheckClient"],[4,"CompressionEncoding"],[8,"IntoRequest"],[3,"Response"],[8,"Clone"],[3,"Error"],[8,"Debug"],[3,"InterceptedService"],[8,"HealthCheck"],[3,"HealthCheckServer"],[3,"CheckSvc"],[3,"_Inner"],[3,"Arc"],[3,"HttpResponseBuilder"],[3,"HttpResponse"],[3,"Cookie"],[3,"Error"],[3,"HttpServer"],[4,"SocketAddr"],[3,"Vec"],[3,"App"],[3,"StatusCode"],[3,"ServiceConfig"],[3,"CookieIter"],[3,"AppState"],[3,"Data"],[3,"Json"],[3,"CustomizeResponder"],[3,"Path"],[3,"Error"],[3,"Extensions"],[3,"Ref"],[3,"RefMut"],[3,"ServiceResponse"],[3,"Response"],[3,"BoxBody"],[3,"ResponseHead"],[3,"HeaderMap"],[3,"AppInit"],[3,"TcpListener"],[3,"UnixListener"],[4,"EitherBody"],[3,"AppEntry"],[3,"index"],[3,"AppService"],[3,"HttpRequest"],[3,"Route"],[3,"Server"],[3,"ServiceRequest"],[8,"ServiceFactory"],[3,"BytesMut"],[3,"Chain"],[3,"UninitSlice"],[3,"Redirect"],[3,"ReqData"],[3,"FormConfig"],[3,"Header"],[3,"JsonConfig"],[3,"PathConfig"],[3,"PayloadConfig"],[3,"Query"],[3,"QueryConfig"],[4,"Ordering"],[3,"Form"],[4,"Either"],[3,"ByteStr"],[15,"u8"],[3,"Custom"],[3,"MetadataKey"],[3,"MetadataValue"],[15,"never"],[3,"OwnedFd"],[4,"QueryPayloadError"],[4,"Payload"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i8"],[15,"u128"],[15,"u16"],[3,"Payload"],[3,"Error"],[3,"Response"],[3,"Limit"],[3,"UrlEncoded"],[4,"JsonBody"],[3,"Readlines"],[3,"Method"],[3,"Mime"],[8,"Fn"],[4,"Cow"],[3,"Reader"],[3,"ResourceEndpoint"],[3,"Resource"],[3,"Path"],[3,"ScopeEndpoint"],[3,"Scope"],[3,"WebService"],[4,"BodySize"],[8,"RangeBounds"],[3,"Take"],[3,"HeaderValue"],[3,"Arguments"],[3,"Writer"],[4,"Level"],[8,"SendSyncRefUnwindSafeDrain"],[3,"OwnedKVList"],[3,"Record"],[3,"OwnedKV"],[3,"TodoController"],[3,"TodoWrite"],[3,"TodoUpdate"],[3,"TodoRead"],[6,"Result"],[4,"Category"],[4,"Unexpected"],[8,"Expected"],[3,"Settings"],[4,"ConfigError"],[8,"FromRow"],[13,"ColumnIndexOutOfBounds"],[13,"ColumnDecode"],[13,"TypeNotFound"],[8,"Responder"],[8,"Buf"],[8,"BufMut"],[13,"Body"],[8,"Deserialize"],[8,"Serialize"],[8,"Controller"]],"a":{"manage":[768],"middleware":[905,906],"state":[912],"use":[905,906]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
